// This file has been automatically generated.

#include "AppHdr.h"
#include "libutil.h"
#include "tiledef-feat.h"

static unsigned int _tile_feat_count[TILE_FEAT_MAX - TILE_WALL_MAX] =
{
    13,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    2,
    1,
    3,
    1,
    1,
    5,
    1,
    1,
    1,
    1,
    3,
    1,
    1,
    3,
    1,
    1,
    16,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    3,
    1,
    1,
    1,
    1,
    29,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    6,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    3,
    1,
    1,
    1,
    1,
    2,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    5,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    3,
    1,
    1,
    1,
    1,
    3,
    1,
    1,
    3,
    1,
    1,
    3,
    1,
    1,
    3,
    1,
    1,
    1,
    3,
    1,
    1,
    2,
    1,
    1,
    1,
    2,
    1,
    1,
    1,
    1,
    2,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    8,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    8,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    2,
    1,
    1,
    8,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    1,
    5,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    11,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    3,
    1,
    1,
    3,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    1,
    6,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    2,
    1,
    2,
    1,
    2,
    1,
    1,
    1,
    1,
    1,
    1,
    30,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    18,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    18,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    18,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    18,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    10,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    2,
    1,
    1,
    4,
    1,
    1,
    1,
    1,
    3,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
};

unsigned int tile_feat_count(tileidx_t idx)
{
    ASSERT_RANGE(idx, TILE_WALL_MAX, TILE_FEAT_MAX);
    return _tile_feat_count[idx - TILE_WALL_MAX];
}

static tileidx_t _tile_feat_basetiles[TILE_FEAT_MAX - TILE_WALL_MAX] =
{
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    13,
    13,
    13,
    13,
    17,
    17,
    19,
    19,
    19,
    22,
    22,
    22,
    22,
    22,
    27,
    27,
    27,
    30,
    30,
    30,
    33,
    33,
    33,
    33,
    33,
    33,
    33,
    33,
    33,
    33,
    33,
    33,
    33,
    33,
    33,
    33,
    49,
    50,
    51,
    52,
    53,
    54,
    55,
    56,
    57,
    58,
    59,
    60,
    61,
    62,
    63,
    64,
    65,
    66,
    67,
    68,
    69,
    70,
    71,
    72,
    73,
    74,
    75,
    76,
    77,
    78,
    79,
    80,
    81,
    82,
    83,
    84,
    85,
    86,
    87,
    88,
    89,
    90,
    91,
    92,
    93,
    94,
    95,
    96,
    97,
    98,
    99,
    100,
    101,
    102,
    103,
    104,
    105,
    106,
    107,
    108,
    109,
    110,
    111,
    112,
    113,
    114,
    115,
    116,
    117,
    118,
    119,
    120,
    121,
    122,
    123,
    124,
    125,
    126,
    127,
    128,
    129,
    130,
    131,
    132,
    133,
    134,
    135,
    136,
    137,
    138,
    139,
    140,
    141,
    141,
    141,
    144,
    145,
    146,
    146,
    146,
    146,
    146,
    146,
    146,
    146,
    146,
    146,
    146,
    146,
    146,
    146,
    146,
    146,
    146,
    146,
    146,
    146,
    146,
    146,
    146,
    146,
    146,
    146,
    146,
    146,
    146,
    175,
    175,
    175,
    175,
    175,
    175,
    181,
    182,
    183,
    184,
    184,
    184,
    187,
    188,
    189,
    189,
    191,
    192,
    193,
    194,
    195,
    196,
    197,
    198,
    199,
    200,
    201,
    202,
    203,
    204,
    205,
    206,
    207,
    208,
    209,
    210,
    211,
    212,
    213,
    214,
    215,
    216,
    217,
    217,
    217,
    217,
    217,
    222,
    223,
    224,
    225,
    226,
    227,
    228,
    229,
    230,
    231,
    232,
    233,
    234,
    235,
    236,
    237,
    238,
    239,
    240,
    241,
    242,
    243,
    244,
    245,
    246,
    247,
    248,
    249,
    250,
    251,
    252,
    253,
    254,
    255,
    256,
    257,
    258,
    259,
    260,
    261,
    262,
    263,
    264,
    265,
    266,
    267,
    268,
    269,
    270,
    271,
    272,
    273,
    274,
    275,
    276,
    277,
    278,
    279,
    280,
    281,
    282,
    283,
    284,
    285,
    286,
    287,
    288,
    289,
    290,
    291,
    291,
    291,
    294,
    295,
    296,
    296,
    296,
    299,
    299,
    299,
    302,
    302,
    302,
    305,
    305,
    305,
    308,
    309,
    309,
    309,
    312,
    312,
    314,
    315,
    316,
    316,
    318,
    319,
    320,
    321,
    321,
    323,
    324,
    325,
    326,
    327,
    328,
    329,
    330,
    331,
    332,
    332,
    332,
    332,
    332,
    332,
    332,
    332,
    340,
    341,
    342,
    343,
    344,
    345,
    346,
    347,
    348,
    349,
    350,
    351,
    352,
    353,
    354,
    355,
    356,
    357,
    358,
    359,
    360,
    360,
    360,
    360,
    360,
    360,
    360,
    360,
    368,
    368,
    370,
    371,
    371,
    371,
    371,
    371,
    371,
    371,
    371,
    379,
    379,
    379,
    379,
    383,
    384,
    384,
    384,
    384,
    384,
    389,
    390,
    391,
    392,
    392,
    392,
    392,
    392,
    392,
    392,
    392,
    392,
    392,
    392,
    403,
    404,
    405,
    406,
    406,
    406,
    406,
    410,
    410,
    410,
    413,
    413,
    413,
    416,
    417,
    417,
    417,
    417,
    421,
    422,
    422,
    422,
    422,
    422,
    422,
    428,
    429,
    430,
    431,
    432,
    432,
    432,
    432,
    436,
    436,
    438,
    438,
    440,
    440,
    442,
    443,
    444,
    445,
    446,
    447,
    447,
    447,
    447,
    447,
    447,
    447,
    447,
    447,
    447,
    447,
    447,
    447,
    447,
    447,
    447,
    447,
    447,
    447,
    447,
    447,
    447,
    447,
    447,
    447,
    447,
    447,
    447,
    447,
    447,
    477,
    477,
    477,
    477,
    477,
    477,
    477,
    477,
    477,
    477,
    477,
    477,
    477,
    477,
    477,
    477,
    477,
    477,
    495,
    495,
    495,
    495,
    495,
    495,
    495,
    495,
    495,
    495,
    495,
    495,
    495,
    495,
    495,
    495,
    495,
    495,
    513,
    513,
    513,
    513,
    513,
    513,
    513,
    513,
    513,
    513,
    513,
    513,
    513,
    513,
    513,
    513,
    513,
    513,
    531,
    531,
    531,
    531,
    531,
    531,
    531,
    531,
    531,
    531,
    531,
    531,
    531,
    531,
    531,
    531,
    531,
    531,
    549,
    549,
    549,
    549,
    549,
    549,
    549,
    549,
    549,
    549,
    559,
    560,
    560,
    560,
    560,
    564,
    564,
    566,
    567,
    567,
    567,
    567,
    571,
    572,
    572,
    572,
    575,
    576,
    577,
    578,
    579,
    580,
    581,
    582,
    583,
    584,
    585,
    586,
    587,
    587,
    587,
    587,
    591,
    591,
    591,
    591,
    595,
    596,
    597,
    598,
    599,
    600,
    601,
    602,
    603,
    604,
    605,
    606,
    607,
    608,
    609,
    610,
    611,
    612,
    613,
    614,
    615,
    616,
    617,
    618,
    619,
    620,
    621,
    622,
    623,
    624,
    625,
    626,
};

tileidx_t tile_feat_basetile(tileidx_t idx)
{
    ASSERT_RANGE(idx, TILE_WALL_MAX, TILE_FEAT_MAX);
    return _tile_feat_basetiles[idx - TILE_WALL_MAX] + TILE_WALL_MAX;
}

static int _tile_feat_probs[TILE_FEAT_MAX - TILE_WALL_MAX] =
{
    10,
    20,
    30,
    40,
    50,
    60,
    70,
    80,
    90,
    100,
    110,
    120,
    130,
    10,
    20,
    30,
    40,
    10,
    20,
    10,
    20,
    30,
    10,
    20,
    30,
    40,
    50,
    10,
    18,
    23,
    5,
    10,
    15,
    5,
    10,
    15,
    20,
    25,
    30,
    35,
    40,
    45,
    50,
    55,
    60,
    65,
    70,
    75,
    80,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    10,
    15,
    5,
    5,
    5,
    10,
    15,
    20,
    25,
    30,
    35,
    43,
    51,
    59,
    67,
    70,
    73,
    76,
    79,
    82,
    85,
    88,
    91,
    94,
    97,
    100,
    103,
    104,
    105,
    106,
    107,
    110,
    113,
    1,
    2,
    3,
    4,
    5,
    6,
    1,
    1,
    1,
    1,
    2,
    3,
    1,
    1,
    1,
    2,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    2,
    3,
    4,
    5,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    2,
    3,
    1,
    1,
    1,
    2,
    3,
    1,
    2,
    3,
    1,
    2,
    3,
    1,
    2,
    3,
    1,
    1,
    2,
    3,
    1,
    2,
    1,
    1,
    1,
    2,
    1,
    1,
    1,
    1,
    2,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    1,
    2,
    1,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    1,
    2,
    3,
    4,
    1,
    1,
    2,
    3,
    4,
    5,
    1,
    1,
    1,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    10,
    11,
    1,
    1,
    1,
    1,
    2,
    3,
    4,
    1,
    2,
    3,
    1,
    2,
    3,
    1,
    1,
    2,
    3,
    4,
    1,
    1,
    2,
    3,
    4,
    5,
    6,
    1,
    1,
    1,
    1,
    1,
    2,
    3,
    4,
    1,
    2,
    1,
    2,
    1,
    2,
    1,
    1,
    1,
    1,
    1,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    10,
    11,
    12,
    13,
    14,
    15,
    16,
    17,
    18,
    19,
    20,
    21,
    22,
    23,
    24,
    25,
    26,
    27,
    28,
    29,
    30,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    10,
    11,
    12,
    13,
    14,
    15,
    16,
    17,
    18,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    10,
    11,
    12,
    13,
    14,
    15,
    16,
    17,
    18,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    10,
    11,
    12,
    13,
    14,
    15,
    16,
    17,
    18,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    10,
    11,
    12,
    13,
    14,
    15,
    16,
    17,
    18,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    10,
    1,
    1,
    2,
    3,
    4,
    1,
    2,
    1,
    1,
    2,
    3,
    4,
    1,
    1,
    2,
    3,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    2,
    3,
    4,
    1,
    2,
    3,
    4,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
};

int tile_feat_probs(tileidx_t idx)
{
    ASSERT_RANGE(idx, TILE_WALL_MAX, TILE_FEAT_MAX);
    return _tile_feat_probs[idx - TILE_WALL_MAX];
}

static int _tile_feat_dominoes[TILE_FEAT_MAX - TILE_WALL_MAX] =
{
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
};

int tile_feat_dominoes(tileidx_t idx)
{
    ASSERT_RANGE(idx, TILE_WALL_MAX, TILE_FEAT_MAX);
    return _tile_feat_dominoes[idx - TILE_WALL_MAX];
}

static const char *_tile_feat_name[TILE_FEAT_MAX - TILE_WALL_MAX] =
{
    "DNGN_TREE",
    "DNGN_TREE_1",
    "DNGN_TREE_2",
    "DNGN_TREE_3",
    "DNGN_TREE_4",
    "DNGN_TREE_5",
    "DNGN_TREE_6",
    "DNGN_TREE_7",
    "DNGN_TREE_8",
    "DNGN_TREE_9",
    "DNGN_TREE_10",
    "DNGN_TREE_11",
    "DNGN_TREE_12",
    "DNGN_TREE_YELLOW",
    "DNGN_TREE_YELLOW_1",
    "DNGN_TREE_YELLOW_2",
    "DNGN_TREE_YELLOW_3",
    "DNGN_TREE_LIGHTRED",
    "DNGN_TREE_LIGHTRED_1",
    "DNGN_TREE_RED",
    "DNGN_TREE_RED_1",
    "DNGN_TREE_RED_2",
    "DNGN_TREE_DEAD",
    "DNGN_TREE_DEAD_1",
    "DNGN_TREE_DEAD_2",
    "DNGN_TREE_DEAD_3",
    "DNGN_TREE_DEAD_4",
    "DNGN_MANGROVE",
    "DNGN_MANGROVE_1",
    "DNGN_MANGROVE_2",
    "DNGN_PETRIFIED_TREE",
    "DNGN_PETRIFIED_TREE_1",
    "DNGN_PETRIFIED_TREE_2",
    "DNGN_DEMONIC_TREE",
    "DNGN_DEMONIC_TREE_2",
    "DNGN_DEMONIC_TREE_3",
    "DNGN_DEMONIC_TREE_4",
    "DNGN_DEMONIC_TREE_5",
    "DNGN_DEMONIC_TREE_6",
    "DNGN_DEMONIC_TREE_7",
    "DNGN_DEMONIC_TREE_8",
    "DNGN_DEMONIC_TREE_9",
    "DNGN_DEMONIC_TREE_10",
    "DNGN_DEMONIC_TREE_11",
    "DNGN_DEMONIC_TREE_12",
    "DNGN_DEMONIC_TREE_13",
    "DNGN_DEMONIC_TREE_14",
    "DNGN_DEMONIC_TREE_15",
    "DNGN_DEMONIC_TREE_16",
    "AWOKEN_OVERLAY",
    "DNGN_CLOSED_DOOR",
    "DNGN_GATE_CLOSED_LEFT",
    "DNGN_GATE_CLOSED_MIDDLE",
    "DNGN_GATE_CLOSED_RIGHT",
    "DNGN_VGATE_CLOSED_UP",
    "DNGN_VGATE_CLOSED_MIDDLE",
    "DNGN_VGATE_CLOSED_DOWN",
    "DNGN_OPEN_DOOR",
    "DNGN_GATE_OPEN_LEFT",
    "DNGN_GATE_OPEN_MIDDLE",
    "DNGN_GATE_OPEN_RIGHT",
    "DNGN_VGATE_OPEN_UP",
    "DNGN_VGATE_OPEN_MIDDLE",
    "DNGN_VGATE_OPEN_DOWN",
    "DNGN_RUNED_DOOR",
    "DNGN_GATE_RUNED_LEFT",
    "DNGN_GATE_RUNED_MIDDLE",
    "DNGN_GATE_RUNED_RIGHT",
    "DNGN_VGATE_RUNED_UP",
    "DNGN_VGATE_RUNED_MIDDLE",
    "DNGN_VGATE_RUNED_DOWN",
    "DNGN_SEALED_DOOR",
    "DNGN_GATE_SEALED_LEFT",
    "DNGN_GATE_SEALED_MIDDLE",
    "DNGN_GATE_SEALED_RIGHT",
    "DNGN_VGATE_SEALED_UP",
    "DNGN_VGATE_SEALED_MIDDLE",
    "DNGN_VGATE_SEALED_DOWN",
    "DNGN_BROKEN_DOOR",
    "DNGN_GATE_BROKEN_LEFT",
    "DNGN_GATE_BROKEN_MIDDLE",
    "DNGN_GATE_BROKEN_RIGHT",
    "DNGN_VGATE_BROKEN_UP",
    "DNGN_VGATE_BROKEN_MIDDLE",
    "DNGN_VGATE_BROKEN_DOWN",
    "DNGN_CLOSED_CLEAR_DOOR",
    "DNGN_GATE_CLOSED_CLEAR_LEFT",
    "DNGN_GATE_CLOSED_CLEAR_MIDDLE",
    "DNGN_GATE_CLOSED_CLEAR_RIGHT",
    "DNGN_VGATE_CLOSED_CLEAR_UP",
    "DNGN_VGATE_CLOSED_CLEAR_MIDDLE",
    "DNGN_VGATE_CLOSED_CLEAR_DOWN",
    "DNGN_OPEN_CLEAR_DOOR",
    "DNGN_GATE_OPEN_CLEAR_LEFT",
    "DNGN_GATE_OPEN_CLEAR_MIDDLE",
    "DNGN_GATE_OPEN_CLEAR_RIGHT",
    "DNGN_VGATE_OPEN_CLEAR_UP",
    "DNGN_VGATE_OPEN_CLEAR_MIDDLE",
    "DNGN_VGATE_OPEN_CLEAR_DOWN",
    "DNGN_RUNED_CLEAR_DOOR",
    "DNGN_GATE_RUNED_CLEAR_LEFT",
    "DNGN_GATE_RUNED_CLEAR_MIDDLE",
    "DNGN_GATE_RUNED_CLEAR_RIGHT",
    "DNGN_VGATE_RUNED_CLEAR_UP",
    "DNGN_VGATE_RUNED_CLEAR_MIDDLE",
    "DNGN_VGATE_RUNED_CLEAR_DOWN",
    "DNGN_SEALED_CLEAR_DOOR",
    "DNGN_GATE_SEALED_CLEAR_LEFT",
    "DNGN_GATE_SEALED_CLEAR_MIDDLE",
    "DNGN_GATE_SEALED_CLEAR_RIGHT",
    "DNGN_VGATE_SEALED_CLEAR_UP",
    "DNGN_VGATE_SEALED_CLEAR_MIDDLE",
    "DNGN_VGATE_SEALED_CLEAR_DOWN",
    "DNGN_BROKEN_CLEAR_DOOR",
    "DNGN_GATE_BROKEN_CLEAR_LEFT",
    "DNGN_GATE_BROKEN_CLEAR_MIDDLE",
    "DNGN_GATE_BROKEN_CLEAR_RIGHT",
    "DNGN_VGATE_BROKEN_CLEAR_UP",
    "DNGN_VGATE_BROKEN_CLEAR_MIDDLE",
    "DNGN_VGATE_BROKEN_CLEAR_DOWN",
    "DNGN_CLOSED_DOOR_CRYPT",
    "DNGN_GATE_CLOSED_LEFT_CRYPT",
    "DNGN_GATE_CLOSED_MIDDLE_CRYPT",
    "DNGN_GATE_CLOSED_RIGHT_CRYPT",
    "DNGN_VGATE_CLOSED_UP_CRYPT",
    "DNGN_VGATE_CLOSED_MIDDLE_CRYPT",
    "DNGN_VGATE_CLOSED_DOWN_CRYPT",
    "DNGN_OPEN_DOOR_CRYPT",
    "DNGN_GATE_OPEN_LEFT_CRYPT",
    "DNGN_GATE_OPEN_MIDDLE_CRYPT",
    "DNGN_GATE_OPEN_RIGHT_CRYPT",
    "DNGN_VGATE_OPEN_UP_CRYPT",
    "DNGN_VGATE_OPEN_MIDDLE_CRYPT",
    "DNGN_VGATE_OPEN_DOWN_CRYPT",
    "DNGN_BROKEN_DOOR_CRYPT",
    "DNGN_GATE_BROKEN_LEFT_CRYPT",
    "DNGN_GATE_BROKEN_MIDDLE_CRYPT",
    "DNGN_GATE_BROKEN_RIGHT_CRYPT",
    "DNGN_VGATE_BROKEN_UP_CRYPT",
    "DNGN_VGATE_BROKEN_MIDDLE_CRYPT",
    "DNGN_VGATE_BROKEN_DOWN_CRYPT",
    "DNGN_FLESHY_ORIFICE",
    "DNGN_FLESHY_ORIFICE_1",
    "DNGN_FLESHY_ORIFICE_2",
    "DNGN_STONE_ARCH",
    "DNGN_ORCISH_IDOL",
    "DNGN_GRANITE_STATUE",
    "DNGN_STATUE_ARCHER",
    "DNGN_STATUE_TENGU",
    "DNGN_STATUE_CENTAUR",
    "DNGN_STATUE_SNAIL",
    "DNGN_STATUE_CAT",
    "DNGN_STATUE_PRINCESS",
    "DNGN_STATUE_MERMAID",
    "DNGN_STATUE_NAGA",
    "DNGN_STATUE_DRAGON",
    "DNGN_STATUE_HYDRA",
    "DNGN_STATUE_ANGEL",
    "DNGN_STATUE_ELEPHANT",
    "DNGN_STATUE_WRAITH",
    "DNGN_STATUE_IMP",
    "DNGN_STATUE_ORB",
    "DNGN_STATUE_CEREBOV",
    "DNGN_STATUE_DEMONIC_BUST",
    "DNGN_STATUE_TWINS",
    "DNGN_STATUE_ORB_GUARDIAN",
    "DNGN_STATUE_SWORD",
    "DNGN_STATUE_AXE",
    "DNGN_STATUE_POLEARM",
    "DNGN_STATUE_SIGMUND",
    "DNGN_STATUE_ANCIENT_HERO",
    "DNGN_STATUE_ANCIENT_EVIL",
    "DNGN_STATUE_TRIANGLE",
    "DNGN_STATUE_MAW",
    "DNGN_STATUE_TENTACLES",
    "DNGN_CRUMBLED_COLUMN",
    "DNGN_CRUMBLED_COLUMN_1",
    "DNGN_CRUMBLED_COLUMN_2",
    "DNGN_CRUMBLED_COLUMN_3",
    "DNGN_CRUMBLED_COLUMN_4",
    "DNGN_CRUMBLED_COLUMN_5",
    "DEPTHS_COLUMN",
    "DEPTHS_CRUMBLED_COLUMN",
    "DNGN_STATUE_IRON",
    "DNGN_GRAVESTONE",
    "DNGN_GRAVESTONE_1",
    "DNGN_GRAVESTONE_2",
    "DNGN_ZONGULDROK_SHRINE",
    "DNGN_TELEPORTER_ICE_CAVE",
    "DNGN_GOLDEN_STATUE",
    "DNGN_GOLDEN_STATUE_1",
    "DNGN_SARCOPHAGUS_SEALED",
    "DNGN_SARCOPHAGUS_PEDESTAL_LEFT",
    "DNGN_SARCOPHAGUS_PEDESTAL_RIGHT",
    "DNGN_STATUE_ELEPHANT_JADE",
    "DNGN_STATUE_IRON_GOLEM",
    "DNGN_DIMENSION_EDGE",
    "DNGN_DISCO_BALL",
    "PLACEHOLDER1",
    "PLACEHOLDER2",
    "PLACEHOLDER3",
    "DNGN_TRAP_DART",
    "DNGN_TRAP_ARROW",
    "DNGN_TRAP_NEEDLE",
    "DNGN_TRAP_BOLT",
    "DNGN_TRAP_SPEAR",
    "DNGN_TRAP_BLADE",
    "DNGN_TRAP_NET",
    "DNGN_TRAP_ALARM",
    "DNGN_TRAP_SHAFT",
    "DNGN_TRAP_DISPERSAL",
    "DNGN_TRAP_TELEPORT",
    "DNGN_TRAP_TELEPORT_PERMANENT",
    "DNGN_TRAP_ZOT",
    "DNGN_TRAP_GOLUBRIA",
    "DNGN_TRAP_PLATE",
    "DNGN_BINDING_SIGIL",
    "DNGN_TRAP_WEB",
    "DNGN_TRAP_WEB_1",
    "DNGN_TRAP_WEB_2",
    "DNGN_TRAP_WEB_3",
    "DNGN_TRAP_WEB_4",
    "DNGN_TRAP_WEB_N",
    "DNGN_TRAP_WEB_E",
    "DNGN_TRAP_WEB_NE",
    "DNGN_TRAP_WEB_S",
    "DNGN_TRAP_WEB_NS",
    "DNGN_TRAP_WEB_ES",
    "DNGN_TRAP_WEB_NES",
    "DNGN_TRAP_WEB_W",
    "DNGN_TRAP_WEB_NW",
    "DNGN_TRAP_WEB_EW",
    "DNGN_TRAP_WEB_NEW",
    "DNGN_TRAP_WEB_SW",
    "DNGN_TRAP_WEB_NSW",
    "DNGN_TRAP_WEB_ESW",
    "DNGN_TRAP_WEB_NESW",
    "DNGN_EXIT_DUNGEON",
    "DNGN_STONE_STAIRS_DOWN",
    "DNGN_STONE_STAIRS_UP",
    "DNGN_ESCAPE_HATCH_DOWN",
    "DNGN_ESCAPE_HATCH_UP",
    "DNGN_SHOALS_STAIRS_DOWN",
    "DNGN_SHOALS_STAIRS_UP",
    "DNGN_ENTER",
    "DNGN_RETURN",
    "DNGN_SEALED_STAIRS_UP",
    "DNGN_SEALED_STAIRS_DOWN",
    "DNGN_ONE_WAY_STAIRS_UP",
    "DNGN_ONE_WAY_STAIRS_DOWN",
    "SHOP_GENERAL",
    "SHOP_WEAPONS",
    "SHOP_ARMOUR",
    "SHOP_FOOD",
    "SHOP_BOOKS",
    "SHOP_SCROLLS",
    "SHOP_WANDS",
    "SHOP_JEWELLERY",
    "SHOP_POTIONS",
    "SHOP_GADGETS",
    "DNGN_ABANDONED_SHOP",
    "DNGN_ENTER_ZOT_CLOSED",
    "DNGN_ENTER_ZOT_OPEN",
    "DNGN_RETURN_ZOT",
    "DNGN_ENTER_TEMPLE",
    "DNGN_EXIT_TEMPLE",
    "DNGN_ENTER_ORC",
    "DNGN_EXIT_ORC",
    "DNGN_ENTER_ELF",
    "DNGN_EXIT_ELF",
    "DNGN_ENTER_LAIR",
    "DNGN_EXIT_LAIR",
    "DNGN_ENTER_SNAKE",
    "DNGN_EXIT_SNAKE",
    "DNGN_ENTER_SWAMP",
    "DNGN_EXIT_SWAMP",
    "DNGN_ENTER_SPIDER",
    "DNGN_EXIT_SPIDER",
    "DNGN_ENTER_SHOALS",
    "DNGN_EXIT_SHOALS",
    "DNGN_ENTER_SLIME",
    "DNGN_EXIT_SLIME",
    "DNGN_EXIT_VAULTS_CLOSED",
    "DNGN_ENTER_VAULTS",
    "DNGN_EXIT_VAULTS_OPEN",
    "DNGN_ENTER_DEPTHS",
    "DNGN_RETURN_DEPTHS",
    "DNGN_ENTER_CRYPT",
    "DNGN_EXIT_CRYPT",
    "DNGN_ENTER_TOMB",
    "DNGN_EXIT_TOMB",
    "DNGN_ENTER_HELL",
    "DNGN_ENTER_HELL_1",
    "DNGN_ENTER_HELL_2",
    "DNGN_RETURN_VESTIBULE",
    "DNGN_STONE_ARCH_HELL",
    "DNGN_ENTER_DIS",
    "DNGN_ENTER_DIS_1",
    "DNGN_ENTER_DIS_2",
    "DNGN_ENTER_GEHENNA",
    "DNGN_ENTER_GEHENNA_1",
    "DNGN_ENTER_GEHENNA_2",
    "DNGN_ENTER_COCYTUS",
    "DNGN_ENTER_COCYTUS_1",
    "DNGN_ENTER_COCYTUS_2",
    "DNGN_ENTER_TARTARUS",
    "DNGN_ENTER_TARTARUS_1",
    "DNGN_ENTER_TARTARUS_2",
    "DNGN_RETURN_HELL",
    "DNGN_ENTER_ABYSS",
    "DNGN_ENTER_ABYSS_1",
    "DNGN_ENTER_ABYSS_2",
    "DNGN_EXIT_ABYSS",
    "DNGN_EXIT_ABYSS_1",
    "DNGN_ABYSSAL_STAIR",
    "DNGN_ENTER_PANDEMONIUM",
    "DNGN_PORTAL",
    "DNGN_PORTAL_1",
    "DNGN_PORTAL_EXPIRED",
    "DNGN_STARRY_PORTAL",
    "DNGN_TRANSIT_PANDEMONIUM",
    "DNGN_EXIT_PANDEMONIUM",
    "DNGN_EXIT_PANDEMONIUM_1",
    "DNGN_PORTAL_VOLCANO",
    "DNGN_PORTAL_VOLCANO_GONE",
    "DNGN_EXIT_VOLCANO",
    "DNGN_PORTAL_SEWER",
    "DNGN_PORTAL_SEWER_RUSTED",
    "DNGN_PORTAL_ICE_CAVE",
    "DNGN_PORTAL_ICE_CAVE_GONE",
    "DNGN_PORTAL_GLACIAL_CHASM",
    "DNGN_PORTAL_GLACIAL_CHASM_GONE",
    "DNGN_PORTAL_WIZARD_LAB",
    "DNGN_PORTAL_WIZARD_LAB_1",
    "DNGN_PORTAL_WIZARD_LAB_2",
    "DNGN_PORTAL_WIZARD_LAB_3",
    "DNGN_PORTAL_WIZARD_LAB_4",
    "DNGN_PORTAL_WIZARD_LAB_5",
    "DNGN_PORTAL_WIZARD_LAB_6",
    "DNGN_PORTAL_WIZARD_LAB_7",
    "DNGN_PORTAL_WIZLAB_GONE",
    "DNGN_PORTAL_OSSUARY",
    "DNGN_PORTAL_OSSUARY_GONE",
    "DNGN_PORTAL_BAILEY",
    "DNGN_PORTAL_BAILEY_GONE",
    "DNGN_PORTAL_GAUNTLET",
    "DNGN_PORTAL_GAUNTLET_GONE",
    "DNGN_PORTAL_TROVE",
    "DNGN_PORTAL_TROVE_GONE",
    "DNGN_PORTAL_BAZAAR",
    "DNGN_PORTAL_BAZAAR_GONE",
    "DNGN_PORTAL_ZIGGURAT",
    "DNGN_PORTAL_ZIGGURAT_GONE",
    "DNGN_PORTAL_DESOLATION",
    "DNGN_PORTAL_DESOLATION_GONE",
    "DNGN_UNKNOWN_PORTAL",
    "DNGN_ALTAR_ZIN",
    "DNGN_ALTAR_SHINING_ONE",
    "DNGN_ALTAR_KIKUBAAQUDGHA",
    "DNGN_ALTAR_YREDELEMNUL",
    "DNGN_ALTAR_XOM",
    "DNGN_ALTAR_XOM_1",
    "DNGN_ALTAR_XOM_2",
    "DNGN_ALTAR_XOM_3",
    "DNGN_ALTAR_XOM_4",
    "DNGN_ALTAR_XOM_5",
    "DNGN_ALTAR_XOM_6",
    "DNGN_ALTAR_XOM_7",
    "DNGN_ALTAR_VEHUMET",
    "DNGN_ALTAR_VEHUMET_1",
    "DNGN_ALTAR_OKAWARU",
    "DNGN_ALTAR_MAKHLEB",
    "DNGN_ALTAR_MAKHLEB_1",
    "DNGN_ALTAR_MAKHLEB_2",
    "DNGN_ALTAR_MAKHLEB_3",
    "DNGN_ALTAR_MAKHLEB_4",
    "DNGN_ALTAR_MAKHLEB_5",
    "DNGN_ALTAR_MAKHLEB_6",
    "DNGN_ALTAR_MAKHLEB_7",
    "DNGN_ALTAR_SIF_MUNA",
    "DNGN_ALTAR_SIF_MUNA_1",
    "DNGN_ALTAR_SIF_MUNA_2",
    "DNGN_ALTAR_SIF_MUNA_3",
    "DNGN_ALTAR_TROG",
    "DNGN_ALTAR_NEMELEX_XOBEH",
    "DNGN_ALTAR_NEMELEX_XOBEH_1",
    "DNGN_ALTAR_NEMELEX_XOBEH_2",
    "DNGN_ALTAR_NEMELEX_XOBEH_3",
    "DNGN_ALTAR_NEMELEX_XOBEH_4",
    "DNGN_ALTAR_ELYVILON",
    "DNGN_ALTAR_LUGONU",
    "DNGN_ALTAR_BEOGH",
    "DNGN_ALTAR_JIYVA",
    "DNGN_ALTAR_JIYVA_1",
    "DNGN_ALTAR_JIYVA_2",
    "DNGN_ALTAR_JIYVA_3",
    "DNGN_ALTAR_JIYVA_4",
    "DNGN_ALTAR_JIYVA_5",
    "DNGN_ALTAR_JIYVA_6",
    "DNGN_ALTAR_JIYVA_7",
    "DNGN_ALTAR_JIYVA_8",
    "DNGN_ALTAR_JIYVA_9",
    "DNGN_ALTAR_JIYVA_10",
    "DNGN_ALTAR_FEDHAS",
    "DNGN_ALTAR_CHEIBRIADOS",
    "DNGN_ALTAR_ASHENZARI",
    "DNGN_ALTAR_DITHMENOS",
    "DNGN_ALTAR_DITHMENOS_1",
    "DNGN_ALTAR_DITHMENOS_2",
    "DNGN_ALTAR_DITHMENOS_3",
    "DNGN_ALTAR_GOZAG",
    "DNGN_ALTAR_GOZAG_1",
    "DNGN_ALTAR_GOZAG_2",
    "DNGN_ALTAR_QAZLAL",
    "DNGN_ALTAR_QAZLAL_1",
    "DNGN_ALTAR_QAZLAL_2",
    "DNGN_ALTAR_RU",
    "DNGN_ALTAR_PAKELLAS",
    "DNGN_ALTAR_PAKELLAS_1",
    "DNGN_ALTAR_PAKELLAS_2",
    "DNGN_ALTAR_PAKELLAS_3",
    "DNGN_ALTAR_USKAYAW",
    "DNGN_ALTAR_HEPLIAKLQANA",
    "DNGN_ALTAR_HEPLIAKLQANA_1",
    "DNGN_ALTAR_HEPLIAKLQANA_2",
    "DNGN_ALTAR_HEPLIAKLQANA_3",
    "DNGN_ALTAR_HEPLIAKLQANA_4",
    "DNGN_ALTAR_HEPLIAKLQANA_5",
    "DNGN_ALTAR_WU_JIAN",
    "DNGN_ALTAR_IGNIS",
    "DNGN_ALTAR_ECUMENICAL",
    "DNGN_UNKNOWN_ALTAR",
    "DNGN_RUNELIGHT",
    "DNGN_RUNELIGHT_1",
    "DNGN_RUNELIGHT_2",
    "DNGN_RUNELIGHT_3",
    "DNGN_FOUNTAIN",
    "DNGN_FOUNTAIN_1",
    "DNGN_SPARKLING_FOUNTAIN",
    "DNGN_SPARKLING_FOUNTAIN_1",
    "DNGN_BLOOD_FOUNTAIN",
    "DNGN_BLOOD_FOUNTAIN_1",
    "DNGN_DRY_FOUNTAIN",
    "DNGN_DRY_FOUNTAIN_WHITE",
    "DNGN_TELEPORTER",
    "DNGN_TRANSPORTER",
    "DNGN_TRANSPORTER_LANDING",
    "BLOOD",
    "BLOOD_1",
    "BLOOD_2",
    "BLOOD_3",
    "BLOOD_4",
    "BLOOD_5",
    "BLOOD_6",
    "BLOOD_7",
    "BLOOD_8",
    "BLOOD_9",
    "BLOOD_10",
    "BLOOD_11",
    "BLOOD_12",
    "BLOOD_13",
    "BLOOD_14",
    "BLOOD_15",
    "BLOOD_16",
    "BLOOD_17",
    "BLOOD_18",
    "BLOOD_19",
    "BLOOD_20",
    "BLOOD_21",
    "BLOOD_22",
    "BLOOD_23",
    "BLOOD_24",
    "BLOOD_25",
    "BLOOD_26",
    "BLOOD_27",
    "BLOOD_28",
    "BLOOD_29",
    "WALL_BLOOD_S",
    "WALL_BLOOD_S_1",
    "WALL_BLOOD_S_2",
    "WALL_BLOOD_S_3",
    "WALL_BLOOD_S_4",
    "WALL_BLOOD_S_5",
    "WALL_BLOOD_S_6",
    "WALL_BLOOD_S_7",
    "WALL_BLOOD_S_8",
    "WALL_BLOOD_S_9",
    "WALL_BLOOD_S_10",
    "WALL_BLOOD_S_11",
    "WALL_BLOOD_S_12",
    "WALL_BLOOD_S_13",
    "WALL_BLOOD_S_14",
    "WALL_BLOOD_S_15",
    "WALL_BLOOD_S_16",
    "WALL_BLOOD_S_17",
    "WALL_BLOOD_W",
    "WALL_BLOOD_W_1",
    "WALL_BLOOD_W_2",
    "WALL_BLOOD_W_3",
    "WALL_BLOOD_W_4",
    "WALL_BLOOD_W_5",
    "WALL_BLOOD_W_6",
    "WALL_BLOOD_W_7",
    "WALL_BLOOD_W_8",
    "WALL_BLOOD_W_9",
    "WALL_BLOOD_W_10",
    "WALL_BLOOD_W_11",
    "WALL_BLOOD_W_12",
    "WALL_BLOOD_W_13",
    "WALL_BLOOD_W_14",
    "WALL_BLOOD_W_15",
    "WALL_BLOOD_W_16",
    "WALL_BLOOD_W_17",
    "WALL_BLOOD_N",
    "WALL_BLOOD_N_1",
    "WALL_BLOOD_N_2",
    "WALL_BLOOD_N_3",
    "WALL_BLOOD_N_4",
    "WALL_BLOOD_N_5",
    "WALL_BLOOD_N_6",
    "WALL_BLOOD_N_7",
    "WALL_BLOOD_N_8",
    "WALL_BLOOD_N_9",
    "WALL_BLOOD_N_10",
    "WALL_BLOOD_N_11",
    "WALL_BLOOD_N_12",
    "WALL_BLOOD_N_13",
    "WALL_BLOOD_N_14",
    "WALL_BLOOD_N_15",
    "WALL_BLOOD_N_16",
    "WALL_BLOOD_N_17",
    "WALL_BLOOD_E",
    "WALL_BLOOD_E_1",
    "WALL_BLOOD_E_2",
    "WALL_BLOOD_E_3",
    "WALL_BLOOD_E_4",
    "WALL_BLOOD_E_5",
    "WALL_BLOOD_E_6",
    "WALL_BLOOD_E_7",
    "WALL_BLOOD_E_8",
    "WALL_BLOOD_E_9",
    "WALL_BLOOD_E_10",
    "WALL_BLOOD_E_11",
    "WALL_BLOOD_E_12",
    "WALL_BLOOD_E_13",
    "WALL_BLOOD_E_14",
    "WALL_BLOOD_E_15",
    "WALL_BLOOD_E_16",
    "WALL_BLOOD_E_17",
    "WALL_OLD_BLOOD",
    "WALL_OLD_BLOOD_1",
    "WALL_OLD_BLOOD_2",
    "WALL_OLD_BLOOD_3",
    "WALL_OLD_BLOOD_4",
    "WALL_OLD_BLOOD_5",
    "WALL_OLD_BLOOD_6",
    "WALL_OLD_BLOOD_7",
    "WALL_OLD_BLOOD_8",
    "WALL_OLD_BLOOD_9",
    "HALO_RANGE",
    "UMBRA",
    "UMBRA_1",
    "UMBRA_2",
    "UMBRA_3",
    "ORB_GLOW",
    "ORB_GLOW_1",
    "QUAD_GLOW",
    "DISJUNCT",
    "DISJUNCT_1",
    "DISJUNCT_2",
    "DISJUNCT_3",
    "LANDING",
    "HEAT_AURA",
    "HEAT_AURA_1",
    "HEAT_AURA_2",
    "HALO_FRIENDLY",
    "HALO_GD_NEUTRAL",
    "HALO_NEUTRAL",
    "HALO_SUMMONER",
    "THREAT_TRIVIAL",
    "THREAT_EASY",
    "THREAT_TOUGH",
    "THREAT_NASTY",
    "THREAT_UNUSUAL",
    "TRAVEL_EXCLUSION_BG",
    "TRAVEL_EXCLUSION_CENTRE_BG",
    "SANCTUARY",
    "MOLD",
    "MOLD_1",
    "MOLD_2",
    "MOLD_3",
    "GLOWING_MOLD",
    "GLOWING_MOLD_1",
    "GLOWING_MOLD_2",
    "GLOWING_MOLD_3",
    "SILENCED",
    "KRAKEN_OVERLAY_NW",
    "KRAKEN_OVERLAY_NE",
    "KRAKEN_OVERLAY_SE",
    "KRAKEN_OVERLAY_SW",
    "KRAKEN_ZOMBIE_OVERLAY_NW",
    "KRAKEN_ZOMBIE_OVERLAY_NE",
    "KRAKEN_ZOMBIE_OVERLAY_SE",
    "KRAKEN_ZOMBIE_OVERLAY_SW",
    "KRAKEN_SIMULACRUM_OVERLAY_NW",
    "KRAKEN_SIMULACRUM_OVERLAY_NE",
    "KRAKEN_SIMULACRUM_OVERLAY_SE",
    "KRAKEN_SIMULACRUM_OVERLAY_SW",
    "KRAKEN_SPECTRAL_OVERLAY_NW",
    "KRAKEN_SPECTRAL_OVERLAY_NE",
    "KRAKEN_SPECTRAL_OVERLAY_SE",
    "KRAKEN_SPECTRAL_OVERLAY_SW",
    "ELDRITCH_OVERLAY_NW",
    "ELDRITCH_OVERLAY_NE",
    "ELDRITCH_OVERLAY_SE",
    "ELDRITCH_OVERLAY_SW",
    "STARSPAWN_OVERLAY_NW",
    "STARSPAWN_OVERLAY_NE",
    "STARSPAWN_OVERLAY_SE",
    "STARSPAWN_OVERLAY_SW",
    "VINE_OVERLAY_NW",
    "VINE_OVERLAY_NE",
    "VINE_OVERLAY_SE",
    "VINE_OVERLAY_SW",
    "HIGHLIGHT_DARK_YELLOW",
    "HIGHLIGHT_YELLOW",
    "HIGHLIGHT_BRIGHT_YELLOW",
};

const char *tile_feat_name(tileidx_t idx)
{
    ASSERT_RANGE(idx, TILE_WALL_MAX, TILE_FEAT_MAX);
    return _tile_feat_name[idx - TILE_WALL_MAX];
}

static tile_info _tile_feat_info[TILE_FEAT_MAX - TILE_WALL_MAX] =
{
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(32, 32, 0, 0, 0, 0, 32, 32),
    tile_info(32, 32, 0, 0, 32, 0, 64, 32),
    tile_info(32, 32, 0, 0, 64, 0, 96, 32),
};

tile_info &tile_feat_info(tileidx_t idx)
{
    ASSERT_RANGE(idx, TILE_WALL_MAX, TILE_FEAT_MAX);
    return _tile_feat_info[idx - TILE_WALL_MAX];
}


typedef pair<const char*, tileidx_t> _name_pair;

static _name_pair feat_name_pairs[] =
{
    _name_pair("awoken_overlay", 49 + TILE_WALL_MAX),
    _name_pair("blood", 447 + TILE_WALL_MAX),
    _name_pair("depths_column", 181 + TILE_WALL_MAX),
    _name_pair("depths_crumbled_column", 182 + TILE_WALL_MAX),
    _name_pair("disjunct", 567 + TILE_WALL_MAX),
    _name_pair("dngn_abandoned_shop", 260 + TILE_WALL_MAX),
    _name_pair("dngn_abyssal_stair", 314 + TILE_WALL_MAX),
    _name_pair("dngn_altar_ashenzari", 405 + TILE_WALL_MAX),
    _name_pair("dngn_altar_beogh", 391 + TILE_WALL_MAX),
    _name_pair("dngn_altar_cheibriados", 404 + TILE_WALL_MAX),
    _name_pair("dngn_altar_dithmenos", 406 + TILE_WALL_MAX),
    _name_pair("dngn_altar_ecumenical", 430 + TILE_WALL_MAX),
    _name_pair("dngn_altar_elyvilon", 389 + TILE_WALL_MAX),
    _name_pair("dngn_altar_fedhas", 403 + TILE_WALL_MAX),
    _name_pair("dngn_altar_gozag", 410 + TILE_WALL_MAX),
    _name_pair("dngn_altar_hepliaklqana", 422 + TILE_WALL_MAX),
    _name_pair("dngn_altar_ignis", 429 + TILE_WALL_MAX),
    _name_pair("dngn_altar_jiyva", 392 + TILE_WALL_MAX),
    _name_pair("dngn_altar_kikubaaqudgha", 358 + TILE_WALL_MAX),
    _name_pair("dngn_altar_lugonu", 390 + TILE_WALL_MAX),
    _name_pair("dngn_altar_makhleb", 371 + TILE_WALL_MAX),
    _name_pair("dngn_altar_nemelex_xobeh", 384 + TILE_WALL_MAX),
    _name_pair("dngn_altar_okawaru", 370 + TILE_WALL_MAX),
    _name_pair("dngn_altar_pakellas", 417 + TILE_WALL_MAX),
    _name_pair("dngn_altar_qazlal", 413 + TILE_WALL_MAX),
    _name_pair("dngn_altar_ru", 416 + TILE_WALL_MAX),
    _name_pair("dngn_altar_shining_one", 357 + TILE_WALL_MAX),
    _name_pair("dngn_altar_sif_muna", 379 + TILE_WALL_MAX),
    _name_pair("dngn_altar_trog", 383 + TILE_WALL_MAX),
    _name_pair("dngn_altar_uskayaw", 421 + TILE_WALL_MAX),
    _name_pair("dngn_altar_vehumet", 368 + TILE_WALL_MAX),
    _name_pair("dngn_altar_wu_jian", 428 + TILE_WALL_MAX),
    _name_pair("dngn_altar_xom", 360 + TILE_WALL_MAX),
    _name_pair("dngn_altar_yredelemnul", 359 + TILE_WALL_MAX),
    _name_pair("dngn_altar_zin", 356 + TILE_WALL_MAX),
    _name_pair("dngn_binding_sigil", 216 + TILE_WALL_MAX),
    _name_pair("dngn_blood_fountain", 440 + TILE_WALL_MAX),
    _name_pair("dngn_blue_fountain", 436 + TILE_WALL_MAX),
    _name_pair("dngn_broken_clear_door", 113 + TILE_WALL_MAX),
    _name_pair("dngn_broken_door", 78 + TILE_WALL_MAX),
    _name_pair("dngn_broken_door_crypt", 134 + TILE_WALL_MAX),
    _name_pair("dngn_closed_clear_door", 85 + TILE_WALL_MAX),
    _name_pair("dngn_closed_door", 50 + TILE_WALL_MAX),
    _name_pair("dngn_closed_door_crypt", 120 + TILE_WALL_MAX),
    _name_pair("dngn_crumbled_column", 175 + TILE_WALL_MAX),
    _name_pair("dngn_demonic_tree", 33 + TILE_WALL_MAX),
    _name_pair("dngn_demonic_tree_1", 33 + TILE_WALL_MAX),
    _name_pair("dngn_demonic_tree_10", 42 + TILE_WALL_MAX),
    _name_pair("dngn_demonic_tree_11", 43 + TILE_WALL_MAX),
    _name_pair("dngn_demonic_tree_12", 44 + TILE_WALL_MAX),
    _name_pair("dngn_demonic_tree_13", 45 + TILE_WALL_MAX),
    _name_pair("dngn_demonic_tree_14", 46 + TILE_WALL_MAX),
    _name_pair("dngn_demonic_tree_15", 47 + TILE_WALL_MAX),
    _name_pair("dngn_demonic_tree_16", 48 + TILE_WALL_MAX),
    _name_pair("dngn_demonic_tree_2", 34 + TILE_WALL_MAX),
    _name_pair("dngn_demonic_tree_3", 35 + TILE_WALL_MAX),
    _name_pair("dngn_demonic_tree_4", 36 + TILE_WALL_MAX),
    _name_pair("dngn_demonic_tree_5", 37 + TILE_WALL_MAX),
    _name_pair("dngn_demonic_tree_6", 38 + TILE_WALL_MAX),
    _name_pair("dngn_demonic_tree_7", 39 + TILE_WALL_MAX),
    _name_pair("dngn_demonic_tree_8", 40 + TILE_WALL_MAX),
    _name_pair("dngn_demonic_tree_9", 41 + TILE_WALL_MAX),
    _name_pair("dngn_dimension_edge", 196 + TILE_WALL_MAX),
    _name_pair("dngn_disco_ball", 197 + TILE_WALL_MAX),
    _name_pair("dngn_dry_fountain", 442 + TILE_WALL_MAX),
    _name_pair("dngn_dry_fountain_white", 443 + TILE_WALL_MAX),
    _name_pair("dngn_enter", 244 + TILE_WALL_MAX),
    _name_pair("dngn_enter_abyss", 309 + TILE_WALL_MAX),
    _name_pair("dngn_enter_cocytus", 302 + TILE_WALL_MAX),
    _name_pair("dngn_enter_crypt", 287 + TILE_WALL_MAX),
    _name_pair("dngn_enter_depths", 285 + TILE_WALL_MAX),
    _name_pair("dngn_enter_dis", 296 + TILE_WALL_MAX),
    _name_pair("dngn_enter_elf", 268 + TILE_WALL_MAX),
    _name_pair("dngn_enter_gehenna", 299 + TILE_WALL_MAX),
    _name_pair("dngn_enter_hell", 291 + TILE_WALL_MAX),
    _name_pair("dngn_enter_lair", 270 + TILE_WALL_MAX),
    _name_pair("dngn_enter_orc", 266 + TILE_WALL_MAX),
    _name_pair("dngn_enter_pandemonium", 315 + TILE_WALL_MAX),
    _name_pair("dngn_enter_shoals", 278 + TILE_WALL_MAX),
    _name_pair("dngn_enter_slime", 280 + TILE_WALL_MAX),
    _name_pair("dngn_enter_snake", 272 + TILE_WALL_MAX),
    _name_pair("dngn_enter_spider", 276 + TILE_WALL_MAX),
    _name_pair("dngn_enter_swamp", 274 + TILE_WALL_MAX),
    _name_pair("dngn_enter_tartarus", 305 + TILE_WALL_MAX),
    _name_pair("dngn_enter_temple", 264 + TILE_WALL_MAX),
    _name_pair("dngn_enter_tomb", 289 + TILE_WALL_MAX),
    _name_pair("dngn_enter_vaults", 283 + TILE_WALL_MAX),
    _name_pair("dngn_enter_zot_closed", 261 + TILE_WALL_MAX),
    _name_pair("dngn_enter_zot_open", 262 + TILE_WALL_MAX),
    _name_pair("dngn_escape_hatch_down", 240 + TILE_WALL_MAX),
    _name_pair("dngn_escape_hatch_up", 241 + TILE_WALL_MAX),
    _name_pair("dngn_exit_abyss", 312 + TILE_WALL_MAX),
    _name_pair("dngn_exit_crypt", 288 + TILE_WALL_MAX),
    _name_pair("dngn_exit_dungeon", 237 + TILE_WALL_MAX),
    _name_pair("dngn_exit_elf", 269 + TILE_WALL_MAX),
    _name_pair("dngn_exit_lair", 271 + TILE_WALL_MAX),
    _name_pair("dngn_exit_orc", 267 + TILE_WALL_MAX),
    _name_pair("dngn_exit_pandemonium", 321 + TILE_WALL_MAX),
    _name_pair("dngn_exit_shoals", 279 + TILE_WALL_MAX),
    _name_pair("dngn_exit_slime", 281 + TILE_WALL_MAX),
    _name_pair("dngn_exit_snake", 273 + TILE_WALL_MAX),
    _name_pair("dngn_exit_spider", 277 + TILE_WALL_MAX),
    _name_pair("dngn_exit_swamp", 275 + TILE_WALL_MAX),
    _name_pair("dngn_exit_temple", 265 + TILE_WALL_MAX),
    _name_pair("dngn_exit_tomb", 290 + TILE_WALL_MAX),
    _name_pair("dngn_exit_vaults_closed", 282 + TILE_WALL_MAX),
    _name_pair("dngn_exit_vaults_open", 284 + TILE_WALL_MAX),
    _name_pair("dngn_exit_volcano", 325 + TILE_WALL_MAX),
    _name_pair("dngn_fleshy_orifice", 141 + TILE_WALL_MAX),
    _name_pair("dngn_fountain", 436 + TILE_WALL_MAX),
    _name_pair("dngn_gate_broken_clear_left", 114 + TILE_WALL_MAX),
    _name_pair("dngn_gate_broken_clear_middle", 115 + TILE_WALL_MAX),
    _name_pair("dngn_gate_broken_clear_right", 116 + TILE_WALL_MAX),
    _name_pair("dngn_gate_broken_left", 79 + TILE_WALL_MAX),
    _name_pair("dngn_gate_broken_left_crypt", 135 + TILE_WALL_MAX),
    _name_pair("dngn_gate_broken_middle", 80 + TILE_WALL_MAX),
    _name_pair("dngn_gate_broken_middle_crypt", 136 + TILE_WALL_MAX),
    _name_pair("dngn_gate_broken_right", 81 + TILE_WALL_MAX),
    _name_pair("dngn_gate_broken_right_crypt", 137 + TILE_WALL_MAX),
    _name_pair("dngn_gate_closed_clear_left", 86 + TILE_WALL_MAX),
    _name_pair("dngn_gate_closed_clear_middle", 87 + TILE_WALL_MAX),
    _name_pair("dngn_gate_closed_clear_right", 88 + TILE_WALL_MAX),
    _name_pair("dngn_gate_closed_left", 51 + TILE_WALL_MAX),
    _name_pair("dngn_gate_closed_left_crypt", 121 + TILE_WALL_MAX),
    _name_pair("dngn_gate_closed_middle", 52 + TILE_WALL_MAX),
    _name_pair("dngn_gate_closed_middle_crypt", 122 + TILE_WALL_MAX),
    _name_pair("dngn_gate_closed_right", 53 + TILE_WALL_MAX),
    _name_pair("dngn_gate_closed_right_crypt", 123 + TILE_WALL_MAX),
    _name_pair("dngn_gate_open_clear_left", 93 + TILE_WALL_MAX),
    _name_pair("dngn_gate_open_clear_middle", 94 + TILE_WALL_MAX),
    _name_pair("dngn_gate_open_clear_right", 95 + TILE_WALL_MAX),
    _name_pair("dngn_gate_open_left", 58 + TILE_WALL_MAX),
    _name_pair("dngn_gate_open_left_crypt", 128 + TILE_WALL_MAX),
    _name_pair("dngn_gate_open_middle", 59 + TILE_WALL_MAX),
    _name_pair("dngn_gate_open_middle_crypt", 129 + TILE_WALL_MAX),
    _name_pair("dngn_gate_open_right", 60 + TILE_WALL_MAX),
    _name_pair("dngn_gate_open_right_crypt", 130 + TILE_WALL_MAX),
    _name_pair("dngn_gate_runed_clear_left", 100 + TILE_WALL_MAX),
    _name_pair("dngn_gate_runed_clear_middle", 101 + TILE_WALL_MAX),
    _name_pair("dngn_gate_runed_clear_right", 102 + TILE_WALL_MAX),
    _name_pair("dngn_gate_runed_left", 65 + TILE_WALL_MAX),
    _name_pair("dngn_gate_runed_middle", 66 + TILE_WALL_MAX),
    _name_pair("dngn_gate_runed_right", 67 + TILE_WALL_MAX),
    _name_pair("dngn_gate_sealed_clear_left", 107 + TILE_WALL_MAX),
    _name_pair("dngn_gate_sealed_clear_middle", 108 + TILE_WALL_MAX),
    _name_pair("dngn_gate_sealed_clear_right", 109 + TILE_WALL_MAX),
    _name_pair("dngn_gate_sealed_left", 72 + TILE_WALL_MAX),
    _name_pair("dngn_gate_sealed_middle", 73 + TILE_WALL_MAX),
    _name_pair("dngn_gate_sealed_right", 74 + TILE_WALL_MAX),
    _name_pair("dngn_golden_statue", 189 + TILE_WALL_MAX),
    _name_pair("dngn_granite_statue", 146 + TILE_WALL_MAX),
    _name_pair("dngn_gravestone", 184 + TILE_WALL_MAX),
    _name_pair("dngn_mangrove", 27 + TILE_WALL_MAX),
    _name_pair("dngn_one_way_stairs_down", 249 + TILE_WALL_MAX),
    _name_pair("dngn_one_way_stairs_up", 248 + TILE_WALL_MAX),
    _name_pair("dngn_open_clear_door", 92 + TILE_WALL_MAX),
    _name_pair("dngn_open_door", 57 + TILE_WALL_MAX),
    _name_pair("dngn_open_door_crypt", 127 + TILE_WALL_MAX),
    _name_pair("dngn_orcish_idol", 145 + TILE_WALL_MAX),
    _name_pair("dngn_petrified_tree", 30 + TILE_WALL_MAX),
    _name_pair("dngn_portal", 316 + TILE_WALL_MAX),
    _name_pair("dngn_portal_bailey", 343 + TILE_WALL_MAX),
    _name_pair("dngn_portal_bailey_gone", 344 + TILE_WALL_MAX),
    _name_pair("dngn_portal_bazaar", 349 + TILE_WALL_MAX),
    _name_pair("dngn_portal_bazaar_gone", 350 + TILE_WALL_MAX),
    _name_pair("dngn_portal_desolation", 353 + TILE_WALL_MAX),
    _name_pair("dngn_portal_desolation_gone", 354 + TILE_WALL_MAX),
    _name_pair("dngn_portal_expired", 318 + TILE_WALL_MAX),
    _name_pair("dngn_portal_gauntlet", 345 + TILE_WALL_MAX),
    _name_pair("dngn_portal_gauntlet_gone", 346 + TILE_WALL_MAX),
    _name_pair("dngn_portal_glacial_chasm", 330 + TILE_WALL_MAX),
    _name_pair("dngn_portal_glacial_chasm_gone", 331 + TILE_WALL_MAX),
    _name_pair("dngn_portal_ice_cave", 328 + TILE_WALL_MAX),
    _name_pair("dngn_portal_ice_cave_gone", 329 + TILE_WALL_MAX),
    _name_pair("dngn_portal_ossuary", 341 + TILE_WALL_MAX),
    _name_pair("dngn_portal_ossuary_gone", 342 + TILE_WALL_MAX),
    _name_pair("dngn_portal_sewer", 326 + TILE_WALL_MAX),
    _name_pair("dngn_portal_sewer_rusted", 327 + TILE_WALL_MAX),
    _name_pair("dngn_portal_trove", 347 + TILE_WALL_MAX),
    _name_pair("dngn_portal_trove_gone", 348 + TILE_WALL_MAX),
    _name_pair("dngn_portal_volcano", 323 + TILE_WALL_MAX),
    _name_pair("dngn_portal_volcano_gone", 324 + TILE_WALL_MAX),
    _name_pair("dngn_portal_wizard_lab", 332 + TILE_WALL_MAX),
    _name_pair("dngn_portal_wizlab_gone", 340 + TILE_WALL_MAX),
    _name_pair("dngn_portal_ziggurat", 351 + TILE_WALL_MAX),
    _name_pair("dngn_portal_ziggurat_gone", 352 + TILE_WALL_MAX),
    _name_pair("dngn_return", 245 + TILE_WALL_MAX),
    _name_pair("dngn_return_depths", 286 + TILE_WALL_MAX),
    _name_pair("dngn_return_hell", 308 + TILE_WALL_MAX),
    _name_pair("dngn_return_vestibule", 294 + TILE_WALL_MAX),
    _name_pair("dngn_return_zot", 263 + TILE_WALL_MAX),
    _name_pair("dngn_runed_clear_door", 99 + TILE_WALL_MAX),
    _name_pair("dngn_runed_door", 64 + TILE_WALL_MAX),
    _name_pair("dngn_runelight", 432 + TILE_WALL_MAX),
    _name_pair("dngn_sarcophagus_pedestal_left", 192 + TILE_WALL_MAX),
    _name_pair("dngn_sarcophagus_pedestal_right", 193 + TILE_WALL_MAX),
    _name_pair("dngn_sarcophagus_sealed", 191 + TILE_WALL_MAX),
    _name_pair("dngn_sealed_clear_door", 106 + TILE_WALL_MAX),
    _name_pair("dngn_sealed_door", 71 + TILE_WALL_MAX),
    _name_pair("dngn_sealed_stairs_down", 247 + TILE_WALL_MAX),
    _name_pair("dngn_sealed_stairs_up", 246 + TILE_WALL_MAX),
    _name_pair("dngn_shoals_stairs_down", 242 + TILE_WALL_MAX),
    _name_pair("dngn_shoals_stairs_up", 243 + TILE_WALL_MAX),
    _name_pair("dngn_sparkling_fountain", 438 + TILE_WALL_MAX),
    _name_pair("dngn_starry_portal", 319 + TILE_WALL_MAX),
    _name_pair("dngn_statue_ancient_evil", 171 + TILE_WALL_MAX),
    _name_pair("dngn_statue_ancient_hero", 170 + TILE_WALL_MAX),
    _name_pair("dngn_statue_angel", 157 + TILE_WALL_MAX),
    _name_pair("dngn_statue_archer", 147 + TILE_WALL_MAX),
    _name_pair("dngn_statue_axe", 167 + TILE_WALL_MAX),
    _name_pair("dngn_statue_cat", 151 + TILE_WALL_MAX),
    _name_pair("dngn_statue_centaur", 149 + TILE_WALL_MAX),
    _name_pair("dngn_statue_cerebov", 162 + TILE_WALL_MAX),
    _name_pair("dngn_statue_demonic_bust", 163 + TILE_WALL_MAX),
    _name_pair("dngn_statue_dragon", 155 + TILE_WALL_MAX),
    _name_pair("dngn_statue_dwarf", 146 + TILE_WALL_MAX),
    _name_pair("dngn_statue_elephant", 158 + TILE_WALL_MAX),
    _name_pair("dngn_statue_elephant_jade", 194 + TILE_WALL_MAX),
    _name_pair("dngn_statue_hydra", 156 + TILE_WALL_MAX),
    _name_pair("dngn_statue_imp", 160 + TILE_WALL_MAX),
    _name_pair("dngn_statue_iron", 183 + TILE_WALL_MAX),
    _name_pair("dngn_statue_iron_golem", 195 + TILE_WALL_MAX),
    _name_pair("dngn_statue_maw", 173 + TILE_WALL_MAX),
    _name_pair("dngn_statue_mermaid", 153 + TILE_WALL_MAX),
    _name_pair("dngn_statue_naga", 154 + TILE_WALL_MAX),
    _name_pair("dngn_statue_orb", 161 + TILE_WALL_MAX),
    _name_pair("dngn_statue_orb_guardian", 165 + TILE_WALL_MAX),
    _name_pair("dngn_statue_polearm", 168 + TILE_WALL_MAX),
    _name_pair("dngn_statue_princess", 152 + TILE_WALL_MAX),
    _name_pair("dngn_statue_sigmund", 169 + TILE_WALL_MAX),
    _name_pair("dngn_statue_snail", 150 + TILE_WALL_MAX),
    _name_pair("dngn_statue_sword", 166 + TILE_WALL_MAX),
    _name_pair("dngn_statue_tengu", 148 + TILE_WALL_MAX),
    _name_pair("dngn_statue_tentacles", 174 + TILE_WALL_MAX),
    _name_pair("dngn_statue_triangle", 172 + TILE_WALL_MAX),
    _name_pair("dngn_statue_twins", 164 + TILE_WALL_MAX),
    _name_pair("dngn_statue_wraith", 159 + TILE_WALL_MAX),
    _name_pair("dngn_stone_arch", 144 + TILE_WALL_MAX),
    _name_pair("dngn_stone_arch_hell", 295 + TILE_WALL_MAX),
    _name_pair("dngn_stone_stairs_down", 238 + TILE_WALL_MAX),
    _name_pair("dngn_stone_stairs_up", 239 + TILE_WALL_MAX),
    _name_pair("dngn_teleporter", 444 + TILE_WALL_MAX),
    _name_pair("dngn_teleporter_ice_cave", 188 + TILE_WALL_MAX),
    _name_pair("dngn_transit_pandemonium", 320 + TILE_WALL_MAX),
    _name_pair("dngn_transporter", 445 + TILE_WALL_MAX),
    _name_pair("dngn_transporter_landing", 446 + TILE_WALL_MAX),
    _name_pair("dngn_trap_alarm", 208 + TILE_WALL_MAX),
    _name_pair("dngn_trap_arrow", 202 + TILE_WALL_MAX),
    _name_pair("dngn_trap_blade", 206 + TILE_WALL_MAX),
    _name_pair("dngn_trap_bolt", 204 + TILE_WALL_MAX),
    _name_pair("dngn_trap_dart", 201 + TILE_WALL_MAX),
    _name_pair("dngn_trap_dispersal", 210 + TILE_WALL_MAX),
    _name_pair("dngn_trap_golubria", 214 + TILE_WALL_MAX),
    _name_pair("dngn_trap_needle", 203 + TILE_WALL_MAX),
    _name_pair("dngn_trap_net", 207 + TILE_WALL_MAX),
    _name_pair("dngn_trap_plate", 215 + TILE_WALL_MAX),
    _name_pair("dngn_trap_shaft", 209 + TILE_WALL_MAX),
    _name_pair("dngn_trap_spear", 205 + TILE_WALL_MAX),
    _name_pair("dngn_trap_teleport", 211 + TILE_WALL_MAX),
    _name_pair("dngn_trap_teleport_permanent", 212 + TILE_WALL_MAX),
    _name_pair("dngn_trap_web", 217 + TILE_WALL_MAX),
    _name_pair("dngn_trap_web_e", 223 + TILE_WALL_MAX),
    _name_pair("dngn_trap_web_es", 227 + TILE_WALL_MAX),
    _name_pair("dngn_trap_web_esw", 235 + TILE_WALL_MAX),
    _name_pair("dngn_trap_web_ew", 231 + TILE_WALL_MAX),
    _name_pair("dngn_trap_web_n", 222 + TILE_WALL_MAX),
    _name_pair("dngn_trap_web_ne", 224 + TILE_WALL_MAX),
    _name_pair("dngn_trap_web_nes", 228 + TILE_WALL_MAX),
    _name_pair("dngn_trap_web_nesw", 236 + TILE_WALL_MAX),
    _name_pair("dngn_trap_web_new", 232 + TILE_WALL_MAX),
    _name_pair("dngn_trap_web_ns", 226 + TILE_WALL_MAX),
    _name_pair("dngn_trap_web_nsw", 234 + TILE_WALL_MAX),
    _name_pair("dngn_trap_web_nw", 230 + TILE_WALL_MAX),
    _name_pair("dngn_trap_web_s", 225 + TILE_WALL_MAX),
    _name_pair("dngn_trap_web_sw", 233 + TILE_WALL_MAX),
    _name_pair("dngn_trap_web_w", 229 + TILE_WALL_MAX),
    _name_pair("dngn_trap_zot", 213 + TILE_WALL_MAX),
    _name_pair("dngn_tree", 0 + TILE_WALL_MAX),
    _name_pair("dngn_tree_dead", 22 + TILE_WALL_MAX),
    _name_pair("dngn_tree_lightred", 17 + TILE_WALL_MAX),
    _name_pair("dngn_tree_red", 19 + TILE_WALL_MAX),
    _name_pair("dngn_tree_yellow", 13 + TILE_WALL_MAX),
    _name_pair("dngn_unknown_altar", 431 + TILE_WALL_MAX),
    _name_pair("dngn_unknown_portal", 355 + TILE_WALL_MAX),
    _name_pair("dngn_vgate_broken_clear_down", 119 + TILE_WALL_MAX),
    _name_pair("dngn_vgate_broken_clear_middle", 118 + TILE_WALL_MAX),
    _name_pair("dngn_vgate_broken_clear_up", 117 + TILE_WALL_MAX),
    _name_pair("dngn_vgate_broken_down", 84 + TILE_WALL_MAX),
    _name_pair("dngn_vgate_broken_down_crypt", 140 + TILE_WALL_MAX),
    _name_pair("dngn_vgate_broken_middle", 83 + TILE_WALL_MAX),
    _name_pair("dngn_vgate_broken_middle_crypt", 139 + TILE_WALL_MAX),
    _name_pair("dngn_vgate_broken_up", 82 + TILE_WALL_MAX),
    _name_pair("dngn_vgate_broken_up_crypt", 138 + TILE_WALL_MAX),
    _name_pair("dngn_vgate_closed_clear_down", 91 + TILE_WALL_MAX),
    _name_pair("dngn_vgate_closed_clear_middle", 90 + TILE_WALL_MAX),
    _name_pair("dngn_vgate_closed_clear_up", 89 + TILE_WALL_MAX),
    _name_pair("dngn_vgate_closed_down", 56 + TILE_WALL_MAX),
    _name_pair("dngn_vgate_closed_down_crypt", 126 + TILE_WALL_MAX),
    _name_pair("dngn_vgate_closed_middle", 55 + TILE_WALL_MAX),
    _name_pair("dngn_vgate_closed_middle_crypt", 125 + TILE_WALL_MAX),
    _name_pair("dngn_vgate_closed_up", 54 + TILE_WALL_MAX),
    _name_pair("dngn_vgate_closed_up_crypt", 124 + TILE_WALL_MAX),
    _name_pair("dngn_vgate_open_clear_down", 98 + TILE_WALL_MAX),
    _name_pair("dngn_vgate_open_clear_middle", 97 + TILE_WALL_MAX),
    _name_pair("dngn_vgate_open_clear_up", 96 + TILE_WALL_MAX),
    _name_pair("dngn_vgate_open_down", 63 + TILE_WALL_MAX),
    _name_pair("dngn_vgate_open_down_crypt", 133 + TILE_WALL_MAX),
    _name_pair("dngn_vgate_open_middle", 62 + TILE_WALL_MAX),
    _name_pair("dngn_vgate_open_middle_crypt", 132 + TILE_WALL_MAX),
    _name_pair("dngn_vgate_open_up", 61 + TILE_WALL_MAX),
    _name_pair("dngn_vgate_open_up_crypt", 131 + TILE_WALL_MAX),
    _name_pair("dngn_vgate_runed_clear_down", 105 + TILE_WALL_MAX),
    _name_pair("dngn_vgate_runed_clear_middle", 104 + TILE_WALL_MAX),
    _name_pair("dngn_vgate_runed_clear_up", 103 + TILE_WALL_MAX),
    _name_pair("dngn_vgate_runed_down", 70 + TILE_WALL_MAX),
    _name_pair("dngn_vgate_runed_middle", 69 + TILE_WALL_MAX),
    _name_pair("dngn_vgate_runed_up", 68 + TILE_WALL_MAX),
    _name_pair("dngn_vgate_sealed_clear_down", 112 + TILE_WALL_MAX),
    _name_pair("dngn_vgate_sealed_clear_middle", 111 + TILE_WALL_MAX),
    _name_pair("dngn_vgate_sealed_clear_up", 110 + TILE_WALL_MAX),
    _name_pair("dngn_vgate_sealed_down", 77 + TILE_WALL_MAX),
    _name_pair("dngn_vgate_sealed_middle", 76 + TILE_WALL_MAX),
    _name_pair("dngn_vgate_sealed_up", 75 + TILE_WALL_MAX),
    _name_pair("dngn_zonguldrok_shrine", 187 + TILE_WALL_MAX),
    _name_pair("eldritch_overlay_ne", 613 + TILE_WALL_MAX),
    _name_pair("eldritch_overlay_nw", 612 + TILE_WALL_MAX),
    _name_pair("eldritch_overlay_se", 614 + TILE_WALL_MAX),
    _name_pair("eldritch_overlay_sw", 615 + TILE_WALL_MAX),
    _name_pair("glowing_mold", 591 + TILE_WALL_MAX),
    _name_pair("halo_friendly", 575 + TILE_WALL_MAX),
    _name_pair("halo_gd_neutral", 576 + TILE_WALL_MAX),
    _name_pair("halo_neutral", 577 + TILE_WALL_MAX),
    _name_pair("halo_range", 559 + TILE_WALL_MAX),
    _name_pair("halo_summoner", 578 + TILE_WALL_MAX),
    _name_pair("heat_aura", 572 + TILE_WALL_MAX),
    _name_pair("highlight_bright_yellow", 626 + TILE_WALL_MAX),
    _name_pair("highlight_dark_yellow", 624 + TILE_WALL_MAX),
    _name_pair("highlight_yellow", 625 + TILE_WALL_MAX),
    _name_pair("kraken_overlay_ne", 597 + TILE_WALL_MAX),
    _name_pair("kraken_overlay_nw", 596 + TILE_WALL_MAX),
    _name_pair("kraken_overlay_se", 598 + TILE_WALL_MAX),
    _name_pair("kraken_overlay_sw", 599 + TILE_WALL_MAX),
    _name_pair("kraken_simulacrum_overlay_ne", 605 + TILE_WALL_MAX),
    _name_pair("kraken_simulacrum_overlay_nw", 604 + TILE_WALL_MAX),
    _name_pair("kraken_simulacrum_overlay_se", 606 + TILE_WALL_MAX),
    _name_pair("kraken_simulacrum_overlay_sw", 607 + TILE_WALL_MAX),
    _name_pair("kraken_spectral_overlay_ne", 609 + TILE_WALL_MAX),
    _name_pair("kraken_spectral_overlay_nw", 608 + TILE_WALL_MAX),
    _name_pair("kraken_spectral_overlay_se", 610 + TILE_WALL_MAX),
    _name_pair("kraken_spectral_overlay_sw", 611 + TILE_WALL_MAX),
    _name_pair("kraken_zombie_overlay_ne", 601 + TILE_WALL_MAX),
    _name_pair("kraken_zombie_overlay_nw", 600 + TILE_WALL_MAX),
    _name_pair("kraken_zombie_overlay_se", 602 + TILE_WALL_MAX),
    _name_pair("kraken_zombie_overlay_sw", 603 + TILE_WALL_MAX),
    _name_pair("landing", 571 + TILE_WALL_MAX),
    _name_pair("mold", 587 + TILE_WALL_MAX),
    _name_pair("orb_glow", 564 + TILE_WALL_MAX),
    _name_pair("placeholder1", 198 + TILE_WALL_MAX),
    _name_pair("placeholder2", 199 + TILE_WALL_MAX),
    _name_pair("placeholder3", 200 + TILE_WALL_MAX),
    _name_pair("quad_glow", 566 + TILE_WALL_MAX),
    _name_pair("ray", 625 + TILE_WALL_MAX),
    _name_pair("ray_multi", 626 + TILE_WALL_MAX),
    _name_pair("ray_out_of_range", 624 + TILE_WALL_MAX),
    _name_pair("sanctuary", 586 + TILE_WALL_MAX),
    _name_pair("shop_armour", 252 + TILE_WALL_MAX),
    _name_pair("shop_books", 254 + TILE_WALL_MAX),
    _name_pair("shop_food", 253 + TILE_WALL_MAX),
    _name_pair("shop_gadgets", 259 + TILE_WALL_MAX),
    _name_pair("shop_general", 250 + TILE_WALL_MAX),
    _name_pair("shop_jewellery", 257 + TILE_WALL_MAX),
    _name_pair("shop_potions", 258 + TILE_WALL_MAX),
    _name_pair("shop_scrolls", 255 + TILE_WALL_MAX),
    _name_pair("shop_wands", 256 + TILE_WALL_MAX),
    _name_pair("shop_weapons", 251 + TILE_WALL_MAX),
    _name_pair("silenced", 595 + TILE_WALL_MAX),
    _name_pair("starspawn_overlay_ne", 617 + TILE_WALL_MAX),
    _name_pair("starspawn_overlay_nw", 616 + TILE_WALL_MAX),
    _name_pair("starspawn_overlay_se", 618 + TILE_WALL_MAX),
    _name_pair("starspawn_overlay_sw", 619 + TILE_WALL_MAX),
    _name_pair("threat_easy", 580 + TILE_WALL_MAX),
    _name_pair("threat_nasty", 582 + TILE_WALL_MAX),
    _name_pair("threat_tough", 581 + TILE_WALL_MAX),
    _name_pair("threat_trivial", 579 + TILE_WALL_MAX),
    _name_pair("threat_unusual", 583 + TILE_WALL_MAX),
    _name_pair("travel_exclusion_bg", 584 + TILE_WALL_MAX),
    _name_pair("travel_exclusion_centre_bg", 585 + TILE_WALL_MAX),
    _name_pair("umbra", 560 + TILE_WALL_MAX),
    _name_pair("vine_overlay_ne", 621 + TILE_WALL_MAX),
    _name_pair("vine_overlay_nw", 620 + TILE_WALL_MAX),
    _name_pair("vine_overlay_se", 622 + TILE_WALL_MAX),
    _name_pair("vine_overlay_sw", 623 + TILE_WALL_MAX),
    _name_pair("wall_blood_e", 531 + TILE_WALL_MAX),
    _name_pair("wall_blood_n", 513 + TILE_WALL_MAX),
    _name_pair("wall_blood_s", 477 + TILE_WALL_MAX),
    _name_pair("wall_blood_w", 495 + TILE_WALL_MAX),
    _name_pair("wall_old_blood", 549 + TILE_WALL_MAX),
};

bool tile_feat_index(const char *str, tileidx_t *idx)
{
    ASSERT(str);
    if (!str)
        return false;

    string lc = str;
    for (unsigned int i = 0; i < lc.size(); i++)
        lc[i] = toalower(lc[i]);

    int num_pairs = sizeof(feat_name_pairs) / sizeof(feat_name_pairs[0]);
    bool result = binary_search<const char *, tileidx_t>(
       lc.c_str(), &feat_name_pairs[0], num_pairs, &strcmp, idx);
    return result;
}

bool tile_feat_equal(tileidx_t tile, tileidx_t idx)
{
    ASSERT_RANGE(tile, TILE_WALL_MAX, TILE_FEAT_MAX);
    return idx >= tile && idx < tile + tile_feat_count(tile);
}


typedef pair<tile_variation, tileidx_t> _colour_pair;

static _colour_pair feat_colour_pairs[] =
{
    _colour_pair(tile_variation(0, 0), 0),
    _colour_pair(tile_variation(0 + TILE_WALL_MAX, 4), 19 + TILE_WALL_MAX),
    _colour_pair(tile_variation(0 + TILE_WALL_MAX, 6), 22 + TILE_WALL_MAX),
    _colour_pair(tile_variation(0 + TILE_WALL_MAX, 12), 17 + TILE_WALL_MAX),
    _colour_pair(tile_variation(0 + TILE_WALL_MAX, 14), 13 + TILE_WALL_MAX),
    _colour_pair(tile_variation(442 + TILE_WALL_MAX, 15), 443 + TILE_WALL_MAX),
};

tileidx_t tile_feat_coloured(tileidx_t idx, int col)
{
    int num_pairs = sizeof(feat_colour_pairs) / sizeof(feat_colour_pairs[0]);
    tile_variation key(idx, col);
    tileidx_t found;
    bool result = binary_search<tile_variation, tileidx_t>(
       key, &feat_colour_pairs[0], num_pairs,
       &tile_variation::cmp, &found);
    return (result ? found : idx);
}

