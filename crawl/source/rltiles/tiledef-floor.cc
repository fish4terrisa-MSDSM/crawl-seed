// This file has been automatically generated.

#include "AppHdr.h"
#include "libutil.h"
#include "tiledef-floor.h"

static unsigned int _tile_floor_count[TILE_FLOOR_MAX - 0] =
{
    1,
    1,
    8,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    8,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    9,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    9,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    9,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    9,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    9,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    9,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    9,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    9,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    9,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    9,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    9,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    9,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    9,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    9,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    9,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    9,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    16,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    8,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    8,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    8,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    6,
    1,
    1,
    1,
    1,
    1,
    12,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    5,
    1,
    1,
    1,
    1,
    7,
    1,
    1,
    1,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    8,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    12,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    6,
    1,
    1,
    1,
    1,
    1,
    10,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    7,
    1,
    1,
    1,
    1,
    1,
    1,
    6,
    1,
    1,
    1,
    1,
    1,
    12,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    9,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    3,
    1,
    1,
    7,
    1,
    1,
    1,
    1,
    1,
    1,
    7,
    1,
    1,
    1,
    1,
    1,
    1,
    7,
    1,
    1,
    1,
    1,
    1,
    1,
    7,
    1,
    1,
    1,
    1,
    1,
    1,
    7,
    1,
    1,
    1,
    1,
    1,
    1,
    7,
    1,
    1,
    1,
    1,
    1,
    1,
    7,
    1,
    1,
    1,
    1,
    1,
    1,
    7,
    1,
    1,
    1,
    1,
    1,
    1,
    7,
    1,
    1,
    1,
    1,
    1,
    1,
    7,
    1,
    1,
    1,
    1,
    1,
    1,
    7,
    1,
    1,
    1,
    1,
    1,
    1,
    7,
    1,
    1,
    1,
    1,
    1,
    1,
    7,
    1,
    1,
    1,
    1,
    1,
    1,
    7,
    1,
    1,
    1,
    1,
    1,
    1,
    7,
    1,
    1,
    1,
    1,
    1,
    1,
    9,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    9,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    3,
    1,
    1,
    9,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    10,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    10,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    15,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    10,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    6,
    1,
    1,
    1,
    1,
    1,
    12,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    13,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    9,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    9,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    9,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    9,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    9,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    9,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    9,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    9,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    9,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    9,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    9,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    9,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    9,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    9,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    9,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    12,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    9,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    10,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    6,
    1,
    1,
    1,
    1,
    1,
    6,
    1,
    1,
    1,
    1,
    1,
    16,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    16,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    16,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    2,
    1,
    2,
    1,
    2,
    1,
    2,
    1,
    2,
    1,
    2,
    1,
    2,
    1,
    2,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    12,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    12,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    3,
    1,
    1,
    2,
    1,
    2,
    1,
    2,
    1,
    2,
    1,
    2,
    1,
    2,
    1,
    2,
    1,
    2,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    2,
    1,
};

unsigned int tile_floor_count(tileidx_t idx)
{
    ASSERT_RANGE(idx, 0, TILE_FLOOR_MAX);
    return _tile_floor_count[idx - 0];
}

static tileidx_t _tile_floor_basetiles[TILE_FLOOR_MAX - 0] =
{
    0,
    1,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    18,
    18,
    18,
    18,
    18,
    18,
    18,
    18,
    18,
    27,
    27,
    27,
    27,
    27,
    27,
    27,
    27,
    27,
    36,
    36,
    36,
    36,
    36,
    36,
    36,
    36,
    36,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    54,
    54,
    54,
    54,
    54,
    54,
    54,
    54,
    54,
    63,
    63,
    63,
    63,
    63,
    63,
    63,
    63,
    63,
    72,
    72,
    72,
    72,
    72,
    72,
    72,
    72,
    72,
    81,
    81,
    81,
    81,
    81,
    81,
    81,
    81,
    81,
    90,
    90,
    90,
    90,
    90,
    90,
    90,
    90,
    90,
    99,
    99,
    99,
    99,
    99,
    99,
    99,
    99,
    99,
    108,
    108,
    108,
    108,
    108,
    108,
    108,
    108,
    108,
    117,
    117,
    117,
    117,
    117,
    117,
    117,
    117,
    117,
    126,
    126,
    126,
    126,
    126,
    126,
    126,
    126,
    126,
    135,
    135,
    135,
    135,
    135,
    135,
    135,
    135,
    135,
    144,
    144,
    144,
    144,
    144,
    144,
    144,
    144,
    144,
    153,
    153,
    153,
    153,
    153,
    153,
    153,
    153,
    153,
    162,
    162,
    162,
    162,
    166,
    166,
    166,
    166,
    170,
    170,
    170,
    170,
    174,
    174,
    174,
    174,
    174,
    174,
    174,
    174,
    174,
    174,
    174,
    174,
    174,
    174,
    174,
    174,
    190,
    190,
    190,
    190,
    190,
    190,
    190,
    190,
    198,
    198,
    198,
    198,
    202,
    202,
    202,
    202,
    206,
    206,
    206,
    206,
    210,
    210,
    210,
    210,
    214,
    214,
    214,
    214,
    214,
    214,
    214,
    214,
    222,
    222,
    222,
    222,
    222,
    222,
    222,
    222,
    230,
    230,
    230,
    230,
    234,
    234,
    234,
    234,
    238,
    238,
    238,
    238,
    242,
    242,
    242,
    242,
    246,
    246,
    246,
    246,
    246,
    246,
    252,
    252,
    252,
    252,
    252,
    252,
    252,
    252,
    252,
    252,
    252,
    252,
    264,
    264,
    264,
    264,
    268,
    268,
    268,
    268,
    272,
    272,
    272,
    272,
    272,
    277,
    277,
    277,
    277,
    277,
    277,
    277,
    284,
    284,
    284,
    284,
    288,
    288,
    288,
    288,
    292,
    292,
    292,
    292,
    296,
    296,
    296,
    296,
    300,
    300,
    300,
    300,
    304,
    304,
    304,
    304,
    308,
    308,
    308,
    308,
    312,
    312,
    312,
    312,
    316,
    316,
    316,
    316,
    320,
    320,
    320,
    320,
    324,
    324,
    324,
    324,
    328,
    328,
    328,
    328,
    332,
    332,
    332,
    332,
    336,
    336,
    336,
    336,
    340,
    340,
    340,
    340,
    344,
    344,
    344,
    344,
    348,
    348,
    348,
    348,
    348,
    348,
    348,
    348,
    356,
    356,
    356,
    356,
    356,
    356,
    356,
    356,
    356,
    356,
    356,
    356,
    368,
    368,
    368,
    368,
    368,
    368,
    374,
    374,
    374,
    374,
    374,
    374,
    374,
    374,
    374,
    374,
    384,
    384,
    384,
    384,
    384,
    384,
    384,
    391,
    391,
    391,
    391,
    391,
    391,
    397,
    397,
    397,
    397,
    397,
    397,
    397,
    397,
    397,
    397,
    397,
    397,
    409,
    409,
    409,
    409,
    409,
    409,
    409,
    409,
    409,
    418,
    418,
    418,
    421,
    421,
    421,
    421,
    421,
    421,
    421,
    428,
    428,
    428,
    428,
    428,
    428,
    428,
    435,
    435,
    435,
    435,
    435,
    435,
    435,
    442,
    442,
    442,
    442,
    442,
    442,
    442,
    449,
    449,
    449,
    449,
    449,
    449,
    449,
    456,
    456,
    456,
    456,
    456,
    456,
    456,
    463,
    463,
    463,
    463,
    463,
    463,
    463,
    470,
    470,
    470,
    470,
    470,
    470,
    470,
    477,
    477,
    477,
    477,
    477,
    477,
    477,
    484,
    484,
    484,
    484,
    484,
    484,
    484,
    491,
    491,
    491,
    491,
    491,
    491,
    491,
    498,
    498,
    498,
    498,
    498,
    498,
    498,
    505,
    505,
    505,
    505,
    505,
    505,
    505,
    512,
    512,
    512,
    512,
    512,
    512,
    512,
    519,
    519,
    519,
    519,
    519,
    519,
    519,
    526,
    526,
    526,
    526,
    526,
    526,
    526,
    526,
    526,
    535,
    535,
    535,
    535,
    535,
    535,
    535,
    535,
    535,
    544,
    544,
    544,
    547,
    547,
    547,
    547,
    547,
    547,
    547,
    547,
    547,
    556,
    557,
    557,
    557,
    557,
    557,
    557,
    557,
    557,
    557,
    557,
    567,
    567,
    567,
    567,
    567,
    567,
    567,
    567,
    567,
    567,
    577,
    578,
    579,
    580,
    581,
    582,
    583,
    584,
    585,
    586,
    587,
    588,
    589,
    590,
    591,
    592,
    593,
    594,
    595,
    596,
    597,
    598,
    599,
    600,
    601,
    602,
    603,
    604,
    605,
    606,
    607,
    608,
    608,
    608,
    608,
    608,
    608,
    608,
    608,
    608,
    608,
    608,
    608,
    608,
    608,
    608,
    623,
    624,
    624,
    624,
    624,
    628,
    628,
    628,
    628,
    628,
    628,
    628,
    628,
    628,
    628,
    638,
    638,
    638,
    638,
    638,
    638,
    644,
    644,
    644,
    644,
    644,
    644,
    644,
    644,
    644,
    644,
    644,
    644,
    656,
    656,
    656,
    656,
    656,
    656,
    656,
    656,
    656,
    656,
    656,
    656,
    656,
    669,
    669,
    669,
    669,
    669,
    669,
    669,
    669,
    669,
    678,
    678,
    678,
    678,
    678,
    678,
    678,
    678,
    678,
    687,
    687,
    687,
    687,
    687,
    687,
    687,
    687,
    687,
    696,
    696,
    696,
    696,
    696,
    696,
    696,
    696,
    696,
    705,
    705,
    705,
    705,
    705,
    705,
    705,
    705,
    705,
    714,
    714,
    714,
    714,
    714,
    714,
    714,
    714,
    714,
    723,
    723,
    723,
    723,
    723,
    723,
    723,
    723,
    723,
    732,
    732,
    732,
    732,
    732,
    732,
    732,
    732,
    732,
    741,
    741,
    741,
    741,
    741,
    741,
    741,
    741,
    741,
    750,
    750,
    750,
    750,
    750,
    750,
    750,
    750,
    750,
    759,
    759,
    759,
    759,
    759,
    759,
    759,
    759,
    759,
    768,
    768,
    768,
    768,
    768,
    768,
    768,
    768,
    768,
    777,
    777,
    777,
    777,
    777,
    777,
    777,
    777,
    777,
    786,
    786,
    786,
    786,
    786,
    786,
    786,
    786,
    786,
    795,
    795,
    795,
    795,
    795,
    795,
    795,
    795,
    795,
    804,
    804,
    804,
    804,
    804,
    804,
    804,
    804,
    804,
    804,
    804,
    804,
    816,
    816,
    816,
    816,
    816,
    816,
    816,
    816,
    816,
    825,
    825,
    825,
    825,
    825,
    825,
    825,
    825,
    825,
    825,
    835,
    835,
    835,
    835,
    835,
    835,
    841,
    841,
    841,
    841,
    841,
    841,
    847,
    847,
    847,
    847,
    847,
    847,
    847,
    847,
    847,
    847,
    847,
    847,
    847,
    847,
    847,
    847,
    863,
    863,
    863,
    863,
    867,
    867,
    867,
    867,
    867,
    867,
    867,
    867,
    867,
    867,
    867,
    867,
    867,
    867,
    867,
    867,
    883,
    883,
    883,
    883,
    883,
    883,
    883,
    883,
    883,
    883,
    883,
    883,
    883,
    883,
    883,
    883,
    899,
    899,
    901,
    901,
    903,
    903,
    905,
    905,
    907,
    907,
    909,
    909,
    911,
    911,
    913,
    913,
    915,
    916,
    917,
    918,
    919,
    920,
    921,
    922,
    923,
    924,
    925,
    926,
    927,
    928,
    929,
    930,
    931,
    932,
    933,
    934,
    935,
    936,
    936,
    936,
    936,
    936,
    936,
    936,
    936,
    936,
    936,
    936,
    936,
    948,
    948,
    948,
    948,
    948,
    948,
    948,
    948,
    948,
    948,
    948,
    948,
    960,
    960,
    960,
    963,
    963,
    965,
    965,
    967,
    967,
    969,
    969,
    971,
    971,
    973,
    973,
    975,
    975,
    977,
    977,
    979,
    980,
    981,
    982,
    983,
    984,
    985,
    986,
    987,
    988,
    989,
    990,
    991,
    992,
    993,
    994,
    995,
    996,
    996,
};

tileidx_t tile_floor_basetile(tileidx_t idx)
{
    ASSERT_RANGE(idx, 0, TILE_FLOOR_MAX);
    return _tile_floor_basetiles[idx - 0] + 0;
}

static int _tile_floor_probs[TILE_FLOOR_MAX - 0] =
{
    1,
    1,
    6,
    12,
    18,
    24,
    30,
    36,
    39,
    40,
    6,
    12,
    18,
    24,
    30,
    36,
    39,
    40,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    1,
    2,
    3,
    4,
    1,
    2,
    3,
    4,
    1,
    2,
    3,
    4,
    16,
    32,
    48,
    64,
    80,
    88,
    96,
    104,
    112,
    120,
    126,
    132,
    135,
    138,
    140,
    141,
    10,
    20,
    30,
    40,
    42,
    44,
    46,
    48,
    2,
    4,
    6,
    8,
    10,
    11,
    12,
    13,
    1,
    2,
    3,
    4,
    1,
    2,
    3,
    4,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    10,
    13,
    16,
    19,
    10,
    13,
    16,
    19,
    10,
    13,
    16,
    19,
    3,
    6,
    9,
    12,
    3,
    5,
    7,
    17,
    27,
    32,
    20,
    40,
    60,
    80,
    90,
    91,
    92,
    97,
    102,
    107,
    108,
    109,
    3,
    6,
    9,
    12,
    3,
    6,
    9,
    12,
    10,
    17,
    24,
    27,
    28,
    10,
    20,
    30,
    40,
    50,
    60,
    70,
    10,
    20,
    30,
    40,
    10,
    20,
    30,
    40,
    10,
    20,
    30,
    40,
    10,
    20,
    30,
    40,
    10,
    20,
    30,
    40,
    10,
    20,
    30,
    40,
    10,
    20,
    30,
    40,
    10,
    20,
    30,
    40,
    10,
    20,
    30,
    40,
    10,
    20,
    30,
    40,
    10,
    20,
    30,
    40,
    10,
    20,
    30,
    40,
    10,
    20,
    30,
    40,
    10,
    20,
    30,
    40,
    10,
    20,
    30,
    40,
    10,
    20,
    30,
    40,
    5,
    10,
    15,
    20,
    22,
    24,
    26,
    28,
    5,
    10,
    15,
    20,
    25,
    28,
    31,
    33,
    35,
    37,
    39,
    40,
    1,
    2,
    3,
    4,
    5,
    6,
    5,
    10,
    15,
    20,
    25,
    27,
    28,
    29,
    30,
    31,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    12,
    16,
    18,
    20,
    21,
    15,
    30,
    45,
    46,
    47,
    48,
    49,
    50,
    51,
    52,
    53,
    54,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    1,
    2,
    3,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    1,
    2,
    3,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    1,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    10,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    10,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    10,
    20,
    30,
    40,
    50,
    60,
    70,
    80,
    90,
    100,
    110,
    120,
    122,
    124,
    126,
    2,
    10,
    13,
    16,
    19,
    10,
    12,
    22,
    32,
    42,
    44,
    54,
    64,
    74,
    84,
    10,
    11,
    12,
    13,
    14,
    15,
    10,
    20,
    30,
    40,
    50,
    60,
    70,
    80,
    90,
    100,
    110,
    120,
    10,
    20,
    30,
    40,
    42,
    44,
    46,
    48,
    49,
    50,
    51,
    52,
    53,
    50,
    55,
    60,
    65,
    75,
    85,
    95,
    105,
    107,
    50,
    55,
    60,
    65,
    75,
    85,
    95,
    105,
    107,
    50,
    55,
    60,
    65,
    75,
    85,
    95,
    105,
    107,
    50,
    55,
    60,
    65,
    75,
    85,
    95,
    105,
    107,
    50,
    55,
    60,
    65,
    75,
    85,
    95,
    105,
    107,
    50,
    55,
    60,
    65,
    75,
    85,
    95,
    105,
    107,
    50,
    55,
    60,
    65,
    75,
    85,
    95,
    105,
    107,
    50,
    55,
    60,
    65,
    75,
    85,
    95,
    105,
    107,
    50,
    55,
    60,
    65,
    75,
    85,
    95,
    105,
    107,
    50,
    55,
    60,
    65,
    75,
    85,
    95,
    105,
    107,
    50,
    55,
    60,
    65,
    75,
    85,
    95,
    105,
    107,
    50,
    55,
    60,
    65,
    75,
    85,
    95,
    105,
    107,
    50,
    55,
    60,
    65,
    75,
    85,
    95,
    105,
    107,
    50,
    55,
    60,
    65,
    75,
    85,
    95,
    105,
    107,
    50,
    55,
    60,
    65,
    75,
    85,
    95,
    105,
    107,
    10,
    20,
    30,
    40,
    50,
    60,
    70,
    80,
    83,
    86,
    89,
    92,
    3,
    6,
    9,
    12,
    15,
    18,
    21,
    24,
    27,
    3,
    6,
    9,
    12,
    15,
    18,
    21,
    24,
    27,
    30,
    3,
    6,
    9,
    12,
    17,
    22,
    5,
    10,
    15,
    20,
    25,
    30,
    10,
    20,
    30,
    40,
    44,
    48,
    52,
    56,
    60,
    64,
    68,
    72,
    76,
    80,
    84,
    88,
    4,
    8,
    12,
    16,
    4,
    8,
    12,
    16,
    20,
    24,
    28,
    32,
    36,
    40,
    44,
    48,
    52,
    56,
    60,
    64,
    4,
    8,
    12,
    16,
    20,
    24,
    28,
    32,
    36,
    40,
    44,
    48,
    52,
    56,
    60,
    64,
    3,
    4,
    2,
    3,
    3,
    4,
    1,
    2,
    2,
    3,
    3,
    4,
    1,
    2,
    1,
    2,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    10,
    20,
    30,
    38,
    46,
    54,
    57,
    60,
    63,
    64,
    65,
    66,
    10,
    20,
    30,
    38,
    46,
    54,
    57,
    60,
    63,
    64,
    65,
    66,
    1,
    2,
    3,
    1,
    2,
    1,
    2,
    1,
    2,
    1,
    2,
    1,
    2,
    1,
    2,
    1,
    2,
    1,
    2,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    2,
};

int tile_floor_probs(tileidx_t idx)
{
    ASSERT_RANGE(idx, 0, TILE_FLOOR_MAX);
    return _tile_floor_probs[idx - 0];
}

static int _tile_floor_dominoes[TILE_FLOOR_MAX - 0] =
{
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    1,
    2,
    3,
    3,
    4,
    5,
    6,
    7,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
};

int tile_floor_dominoes(tileidx_t idx)
{
    ASSERT_RANGE(idx, 0, TILE_FLOOR_MAX);
    return _tile_floor_dominoes[idx - 0];
}

static const char *_tile_floor_name[TILE_FLOOR_MAX - 0] =
{
    "DNGN_UNSEEN",
    "DNGN_ERROR",
    "FLOOR_GREY_DIRT",
    "FLOOR_GREY_DIRT_1",
    "FLOOR_GREY_DIRT_2",
    "FLOOR_GREY_DIRT_3",
    "FLOOR_GREY_DIRT_4",
    "FLOOR_GREY_DIRT_5",
    "FLOOR_GREY_DIRT_6",
    "FLOOR_GREY_DIRT_7",
    "FLOOR_GREY_DIRT_B",
    "FLOOR_GREY_DIRT_B_1",
    "FLOOR_GREY_DIRT_B_2",
    "FLOOR_GREY_DIRT_B_3",
    "FLOOR_GREY_DIRT_B_4",
    "FLOOR_GREY_DIRT_B_5",
    "FLOOR_GREY_DIRT_B_6",
    "FLOOR_GREY_DIRT_B_7",
    "FLOOR_PEBBLE",
    "FLOOR_PEBBLE_1",
    "FLOOR_PEBBLE_2",
    "FLOOR_PEBBLE_3",
    "FLOOR_PEBBLE_4",
    "FLOOR_PEBBLE_5",
    "FLOOR_PEBBLE_6",
    "FLOOR_PEBBLE_7",
    "FLOOR_PEBBLE_8",
    "FLOOR_PEBBLE_BROWN",
    "FLOOR_PEBBLE_BROWN_1",
    "FLOOR_PEBBLE_BROWN_2",
    "FLOOR_PEBBLE_BROWN_3",
    "FLOOR_PEBBLE_BROWN_4",
    "FLOOR_PEBBLE_BROWN_5",
    "FLOOR_PEBBLE_BROWN_6",
    "FLOOR_PEBBLE_BROWN_7",
    "FLOOR_PEBBLE_BROWN_8",
    "FLOOR_PEBBLE_BLUE",
    "FLOOR_PEBBLE_BLUE_1",
    "FLOOR_PEBBLE_BLUE_2",
    "FLOOR_PEBBLE_BLUE_3",
    "FLOOR_PEBBLE_BLUE_4",
    "FLOOR_PEBBLE_BLUE_5",
    "FLOOR_PEBBLE_BLUE_6",
    "FLOOR_PEBBLE_BLUE_7",
    "FLOOR_PEBBLE_BLUE_8",
    "FLOOR_PEBBLE_GREEN",
    "FLOOR_PEBBLE_GREEN_1",
    "FLOOR_PEBBLE_GREEN_2",
    "FLOOR_PEBBLE_GREEN_3",
    "FLOOR_PEBBLE_GREEN_4",
    "FLOOR_PEBBLE_GREEN_5",
    "FLOOR_PEBBLE_GREEN_6",
    "FLOOR_PEBBLE_GREEN_7",
    "FLOOR_PEBBLE_GREEN_8",
    "FLOOR_PEBBLE_CYAN",
    "FLOOR_PEBBLE_CYAN_1",
    "FLOOR_PEBBLE_CYAN_2",
    "FLOOR_PEBBLE_CYAN_3",
    "FLOOR_PEBBLE_CYAN_4",
    "FLOOR_PEBBLE_CYAN_5",
    "FLOOR_PEBBLE_CYAN_6",
    "FLOOR_PEBBLE_CYAN_7",
    "FLOOR_PEBBLE_CYAN_8",
    "FLOOR_PEBBLE_RED",
    "FLOOR_PEBBLE_RED_1",
    "FLOOR_PEBBLE_RED_2",
    "FLOOR_PEBBLE_RED_3",
    "FLOOR_PEBBLE_RED_4",
    "FLOOR_PEBBLE_RED_5",
    "FLOOR_PEBBLE_RED_6",
    "FLOOR_PEBBLE_RED_7",
    "FLOOR_PEBBLE_RED_8",
    "FLOOR_PEBBLE_MAGENTA",
    "FLOOR_PEBBLE_MAGENTA_1",
    "FLOOR_PEBBLE_MAGENTA_2",
    "FLOOR_PEBBLE_MAGENTA_3",
    "FLOOR_PEBBLE_MAGENTA_4",
    "FLOOR_PEBBLE_MAGENTA_5",
    "FLOOR_PEBBLE_MAGENTA_6",
    "FLOOR_PEBBLE_MAGENTA_7",
    "FLOOR_PEBBLE_MAGENTA_8",
    "FLOOR_PEBBLE_DARKGRAY",
    "FLOOR_PEBBLE_DARKGRAY_1",
    "FLOOR_PEBBLE_DARKGRAY_2",
    "FLOOR_PEBBLE_DARKGRAY_3",
    "FLOOR_PEBBLE_DARKGRAY_4",
    "FLOOR_PEBBLE_DARKGRAY_5",
    "FLOOR_PEBBLE_DARKGRAY_6",
    "FLOOR_PEBBLE_DARKGRAY_7",
    "FLOOR_PEBBLE_DARKGRAY_8",
    "FLOOR_PEBBLE_LIGHTBLUE",
    "FLOOR_PEBBLE_LIGHTBLUE_1",
    "FLOOR_PEBBLE_LIGHTBLUE_2",
    "FLOOR_PEBBLE_LIGHTBLUE_3",
    "FLOOR_PEBBLE_LIGHTBLUE_4",
    "FLOOR_PEBBLE_LIGHTBLUE_5",
    "FLOOR_PEBBLE_LIGHTBLUE_6",
    "FLOOR_PEBBLE_LIGHTBLUE_7",
    "FLOOR_PEBBLE_LIGHTBLUE_8",
    "FLOOR_PEBBLE_LIGHTGREEN",
    "FLOOR_PEBBLE_LIGHTGREEN_1",
    "FLOOR_PEBBLE_LIGHTGREEN_2",
    "FLOOR_PEBBLE_LIGHTGREEN_3",
    "FLOOR_PEBBLE_LIGHTGREEN_4",
    "FLOOR_PEBBLE_LIGHTGREEN_5",
    "FLOOR_PEBBLE_LIGHTGREEN_6",
    "FLOOR_PEBBLE_LIGHTGREEN_7",
    "FLOOR_PEBBLE_LIGHTGREEN_8",
    "FLOOR_PEBBLE_LIGHTCYAN",
    "FLOOR_PEBBLE_LIGHTCYAN_1",
    "FLOOR_PEBBLE_LIGHTCYAN_2",
    "FLOOR_PEBBLE_LIGHTCYAN_3",
    "FLOOR_PEBBLE_LIGHTCYAN_4",
    "FLOOR_PEBBLE_LIGHTCYAN_5",
    "FLOOR_PEBBLE_LIGHTCYAN_6",
    "FLOOR_PEBBLE_LIGHTCYAN_7",
    "FLOOR_PEBBLE_LIGHTCYAN_8",
    "FLOOR_PEBBLE_LIGHTRED",
    "FLOOR_PEBBLE_LIGHTRED_1",
    "FLOOR_PEBBLE_LIGHTRED_2",
    "FLOOR_PEBBLE_LIGHTRED_3",
    "FLOOR_PEBBLE_LIGHTRED_4",
    "FLOOR_PEBBLE_LIGHTRED_5",
    "FLOOR_PEBBLE_LIGHTRED_6",
    "FLOOR_PEBBLE_LIGHTRED_7",
    "FLOOR_PEBBLE_LIGHTRED_8",
    "FLOOR_PEBBLE_LIGHTMAGENTA",
    "FLOOR_PEBBLE_LIGHTMAGENTA_1",
    "FLOOR_PEBBLE_LIGHTMAGENTA_2",
    "FLOOR_PEBBLE_LIGHTMAGENTA_3",
    "FLOOR_PEBBLE_LIGHTMAGENTA_4",
    "FLOOR_PEBBLE_LIGHTMAGENTA_5",
    "FLOOR_PEBBLE_LIGHTMAGENTA_6",
    "FLOOR_PEBBLE_LIGHTMAGENTA_7",
    "FLOOR_PEBBLE_LIGHTMAGENTA_8",
    "FLOOR_PEBBLE_YELLOW",
    "FLOOR_PEBBLE_YELLOW_1",
    "FLOOR_PEBBLE_YELLOW_2",
    "FLOOR_PEBBLE_YELLOW_3",
    "FLOOR_PEBBLE_YELLOW_4",
    "FLOOR_PEBBLE_YELLOW_5",
    "FLOOR_PEBBLE_YELLOW_6",
    "FLOOR_PEBBLE_YELLOW_7",
    "FLOOR_PEBBLE_YELLOW_8",
    "FLOOR_PEBBLE_WHITE",
    "FLOOR_PEBBLE_WHITE_1",
    "FLOOR_PEBBLE_WHITE_2",
    "FLOOR_PEBBLE_WHITE_3",
    "FLOOR_PEBBLE_WHITE_4",
    "FLOOR_PEBBLE_WHITE_5",
    "FLOOR_PEBBLE_WHITE_6",
    "FLOOR_PEBBLE_WHITE_7",
    "FLOOR_PEBBLE_WHITE_8",
    "FLOOR_PEBBLE_DARKBROWN",
    "FLOOR_PEBBLE_DARKBROWN_1",
    "FLOOR_PEBBLE_DARKBROWN_2",
    "FLOOR_PEBBLE_DARKBROWN_3",
    "FLOOR_PEBBLE_DARKBROWN_4",
    "FLOOR_PEBBLE_DARKBROWN_5",
    "FLOOR_PEBBLE_DARKBROWN_6",
    "FLOOR_PEBBLE_DARKBROWN_7",
    "FLOOR_PEBBLE_DARKBROWN_8",
    "FLOOR_HALL",
    "FLOOR_HALL_1",
    "FLOOR_HALL_2",
    "FLOOR_HALL_3",
    "FLOOR_MUD",
    "FLOOR_MUD_1",
    "FLOOR_MUD_2",
    "FLOOR_MUD_3",
    "FLOOR_ICE",
    "FLOOR_ICE_1",
    "FLOOR_ICE_2",
    "FLOOR_ICE_3",
    "FLOOR_LAIR",
    "FLOOR_LAIR_1",
    "FLOOR_LAIR_2",
    "FLOOR_LAIR_3",
    "FLOOR_LAIR_4",
    "FLOOR_LAIR_5",
    "FLOOR_LAIR_6",
    "FLOOR_LAIR_7",
    "FLOOR_LAIR_8",
    "FLOOR_LAIR_9",
    "FLOOR_LAIR_10",
    "FLOOR_LAIR_11",
    "FLOOR_LAIR_12",
    "FLOOR_LAIR_13",
    "FLOOR_LAIR_14",
    "FLOOR_LAIR_15",
    "FLOOR_ORC",
    "FLOOR_ORC_1",
    "FLOOR_ORC_2",
    "FLOOR_ORC_3",
    "FLOOR_ORC_4",
    "FLOOR_ORC_5",
    "FLOOR_ORC_6",
    "FLOOR_ORC_7",
    "FLOOR_MOSS",
    "FLOOR_MOSS_1",
    "FLOOR_MOSS_2",
    "FLOOR_MOSS_3",
    "FLOOR_SLIME",
    "FLOOR_SLIME_1",
    "FLOOR_SLIME_2",
    "FLOOR_SLIME_3",
    "FLOOR_SLIME_ACIDIC",
    "FLOOR_SLIME_ACIDIC_1",
    "FLOOR_SLIME_ACIDIC_2",
    "FLOOR_SLIME_ACIDIC_3",
    "FLOOR_ICY",
    "FLOOR_ICY_1",
    "FLOOR_ICY_2",
    "FLOOR_ICY_3",
    "SLIME_OVERLAY",
    "SLIME_OVERLAY_1",
    "SLIME_OVERLAY_2",
    "SLIME_OVERLAY_3",
    "SLIME_OVERLAY_4",
    "SLIME_OVERLAY_5",
    "SLIME_OVERLAY_6",
    "SLIME_OVERLAY_7",
    "ICE_OVERLAY",
    "ICE_OVERLAY_1",
    "ICE_OVERLAY_2",
    "ICE_OVERLAY_3",
    "ICE_OVERLAY_4",
    "ICE_OVERLAY_5",
    "ICE_OVERLAY_6",
    "ICE_OVERLAY_7",
    "FLOOR_SNAKE_A",
    "FLOOR_SNAKE_A_1",
    "FLOOR_SNAKE_A_2",
    "FLOOR_SNAKE_A_3",
    "FLOOR_SNAKE_C",
    "FLOOR_SNAKE_C_1",
    "FLOOR_SNAKE_C_2",
    "FLOOR_SNAKE_C_3",
    "FLOOR_SNAKE_D",
    "FLOOR_SNAKE_D_1",
    "FLOOR_SNAKE_D_2",
    "FLOOR_SNAKE_D_3",
    "FLOOR_SWAMP",
    "FLOOR_SWAMP_1",
    "FLOOR_SWAMP_2",
    "FLOOR_SWAMP_3",
    "FLOOR_SALT",
    "FLOOR_SALT_1",
    "FLOOR_SALT_2",
    "FLOOR_SALT_3",
    "FLOOR_SALT_4",
    "FLOOR_SALT_5",
    "FLOOR_SPIDER",
    "FLOOR_SPIDER_1",
    "FLOOR_SPIDER_2",
    "FLOOR_SPIDER_3",
    "FLOOR_SPIDER_4",
    "FLOOR_SPIDER_5",
    "FLOOR_SPIDER_6",
    "FLOOR_SPIDER_7",
    "FLOOR_SPIDER_8",
    "FLOOR_SPIDER_9",
    "FLOOR_SPIDER_10",
    "FLOOR_SPIDER_11",
    "FLOOR_TOMB",
    "FLOOR_TOMB_1",
    "FLOOR_TOMB_2",
    "FLOOR_TOMB_3",
    "FLOOR_VAULT",
    "FLOOR_VAULT_1",
    "FLOOR_VAULT_2",
    "FLOOR_VAULT_3",
    "FLOOR_DEPTHSTONE",
    "FLOOR_DEPTHSTONE_1",
    "FLOOR_DEPTHSTONE_2",
    "FLOOR_DEPTHSTONE_3",
    "FLOOR_DEPTHSTONE_4",
    "FLOOR_VINES",
    "FLOOR_VINES_1",
    "FLOOR_VINES_2",
    "FLOOR_VINES_3",
    "FLOOR_VINES_4",
    "FLOOR_VINES_5",
    "FLOOR_VINES_6",
    "BORG_FLOOR",
    "BORG_FLOOR_1",
    "BORG_FLOOR_2",
    "BORG_FLOOR_3",
    "FLOOR_ROUGH",
    "FLOOR_ROUGH_1",
    "FLOOR_ROUGH_2",
    "FLOOR_ROUGH_3",
    "FLOOR_ROUGH_BLUE",
    "FLOOR_ROUGH_BLUE_1",
    "FLOOR_ROUGH_BLUE_2",
    "FLOOR_ROUGH_BLUE_3",
    "FLOOR_ROUGH_GREEN",
    "FLOOR_ROUGH_GREEN_1",
    "FLOOR_ROUGH_GREEN_2",
    "FLOOR_ROUGH_GREEN_3",
    "FLOOR_ROUGH_CYAN",
    "FLOOR_ROUGH_CYAN_1",
    "FLOOR_ROUGH_CYAN_2",
    "FLOOR_ROUGH_CYAN_3",
    "FLOOR_ROUGH_MAGENTA",
    "FLOOR_ROUGH_MAGENTA_1",
    "FLOOR_ROUGH_MAGENTA_2",
    "FLOOR_ROUGH_MAGENTA_3",
    "FLOOR_ROUGH_BROWN",
    "FLOOR_ROUGH_BROWN_1",
    "FLOOR_ROUGH_BROWN_2",
    "FLOOR_ROUGH_BROWN_3",
    "FLOOR_ROUGH_LIGHTGRAY",
    "FLOOR_ROUGH_LIGHTGRAY_1",
    "FLOOR_ROUGH_LIGHTGRAY_2",
    "FLOOR_ROUGH_LIGHTGRAY_3",
    "FLOOR_ROUGH_DARKGRAY",
    "FLOOR_ROUGH_DARKGRAY_1",
    "FLOOR_ROUGH_DARKGRAY_2",
    "FLOOR_ROUGH_DARKGRAY_3",
    "FLOOR_ROUGH_LIGHTBLUE",
    "FLOOR_ROUGH_LIGHTBLUE_1",
    "FLOOR_ROUGH_LIGHTBLUE_2",
    "FLOOR_ROUGH_LIGHTBLUE_3",
    "FLOOR_ROUGH_LIGHTGREEN",
    "FLOOR_ROUGH_LIGHTGREEN_1",
    "FLOOR_ROUGH_LIGHTGREEN_2",
    "FLOOR_ROUGH_LIGHTGREEN_3",
    "FLOOR_ROUGH_LIGHTCYAN",
    "FLOOR_ROUGH_LIGHTCYAN_1",
    "FLOOR_ROUGH_LIGHTCYAN_2",
    "FLOOR_ROUGH_LIGHTCYAN_3",
    "FLOOR_ROUGH_LIGHTRED",
    "FLOOR_ROUGH_LIGHTRED_1",
    "FLOOR_ROUGH_LIGHTRED_2",
    "FLOOR_ROUGH_LIGHTRED_3",
    "FLOOR_ROUGH_LIGHTMAGENTA",
    "FLOOR_ROUGH_LIGHTMAGENTA_1",
    "FLOOR_ROUGH_LIGHTMAGENTA_2",
    "FLOOR_ROUGH_LIGHTMAGENTA_3",
    "FLOOR_ROUGH_YELLOW",
    "FLOOR_ROUGH_YELLOW_1",
    "FLOOR_ROUGH_YELLOW_2",
    "FLOOR_ROUGH_YELLOW_3",
    "FLOOR_ROUGH_WHITE",
    "FLOOR_ROUGH_WHITE_1",
    "FLOOR_ROUGH_WHITE_2",
    "FLOOR_ROUGH_WHITE_3",
    "FLOOR_SAND",
    "FLOOR_SAND_1",
    "FLOOR_SAND_2",
    "FLOOR_SAND_3",
    "FLOOR_SAND_4",
    "FLOOR_SAND_5",
    "FLOOR_SAND_6",
    "FLOOR_SAND_7",
    "FLOOR_COBBLE_BLOOD",
    "FLOOR_COBBLE_BLOOD_1",
    "FLOOR_COBBLE_BLOOD_2",
    "FLOOR_COBBLE_BLOOD_3",
    "FLOOR_COBBLE_BLOOD_4",
    "FLOOR_COBBLE_BLOOD_5",
    "FLOOR_COBBLE_BLOOD_6",
    "FLOOR_COBBLE_BLOOD_7",
    "FLOOR_COBBLE_BLOOD_8",
    "FLOOR_COBBLE_BLOOD_9",
    "FLOOR_COBBLE_BLOOD_10",
    "FLOOR_COBBLE_BLOOD_11",
    "FLOOR_MARBLE",
    "FLOOR_MARBLE_1",
    "FLOOR_MARBLE_2",
    "FLOOR_MARBLE_3",
    "FLOOR_MARBLE_4",
    "FLOOR_MARBLE_5",
    "FLOOR_SANDSTONE",
    "FLOOR_SANDSTONE_1",
    "FLOOR_SANDSTONE_2",
    "FLOOR_SANDSTONE_3",
    "FLOOR_SANDSTONE_4",
    "FLOOR_SANDSTONE_5",
    "FLOOR_SANDSTONE_6",
    "FLOOR_SANDSTONE_7",
    "FLOOR_SANDSTONE_8",
    "FLOOR_SANDSTONE_9",
    "FLOOR_VOLCANIC",
    "FLOOR_VOLCANIC_1",
    "FLOOR_VOLCANIC_2",
    "FLOOR_VOLCANIC_3",
    "FLOOR_VOLCANIC_4",
    "FLOOR_VOLCANIC_5",
    "FLOOR_VOLCANIC_6",
    "FLOOR_CRYSTAL_SQUARES",
    "FLOOR_CRYSTAL_SQUARES_1",
    "FLOOR_CRYSTAL_SQUARES_2",
    "FLOOR_CRYSTAL_SQUARES_3",
    "FLOOR_CRYSTAL_SQUARES_4",
    "FLOOR_CRYSTAL_SQUARES_5",
    "FLOOR_GRASS",
    "FLOOR_GRASS_1",
    "FLOOR_GRASS_2",
    "FLOOR_GRASS_3",
    "FLOOR_GRASS_4",
    "FLOOR_GRASS_5",
    "FLOOR_GRASS_6",
    "FLOOR_GRASS_7",
    "FLOOR_GRASS_8",
    "FLOOR_GRASS_9",
    "FLOOR_GRASS_10",
    "FLOOR_GRASS_11",
    "HALO_GRASS",
    "HALO_GRASS_1",
    "HALO_GRASS_2",
    "HALO_GRASS_3",
    "HALO_GRASS_4",
    "HALO_GRASS_5",
    "HALO_GRASS_6",
    "HALO_GRASS_7",
    "HALO_GRASS_8",
    "FLOOR_GRASS_DIRT_MIX",
    "FLOOR_GRASS_DIRT_MIX_1",
    "FLOOR_GRASS_DIRT_MIX_2",
    "FLOOR_NERVES",
    "FLOOR_NERVES_1",
    "FLOOR_NERVES_2",
    "FLOOR_NERVES_3",
    "FLOOR_NERVES_4",
    "FLOOR_NERVES_5",
    "FLOOR_NERVES_6",
    "FLOOR_NERVES_BLUE",
    "FLOOR_NERVES_BLUE_1",
    "FLOOR_NERVES_BLUE_2",
    "FLOOR_NERVES_BLUE_3",
    "FLOOR_NERVES_BLUE_4",
    "FLOOR_NERVES_BLUE_5",
    "FLOOR_NERVES_BLUE_6",
    "FLOOR_NERVES_GREEN",
    "FLOOR_NERVES_GREEN_1",
    "FLOOR_NERVES_GREEN_2",
    "FLOOR_NERVES_GREEN_3",
    "FLOOR_NERVES_GREEN_4",
    "FLOOR_NERVES_GREEN_5",
    "FLOOR_NERVES_GREEN_6",
    "FLOOR_NERVES_CYAN",
    "FLOOR_NERVES_CYAN_1",
    "FLOOR_NERVES_CYAN_2",
    "FLOOR_NERVES_CYAN_3",
    "FLOOR_NERVES_CYAN_4",
    "FLOOR_NERVES_CYAN_5",
    "FLOOR_NERVES_CYAN_6",
    "FLOOR_NERVES_MAGENTA",
    "FLOOR_NERVES_MAGENTA_1",
    "FLOOR_NERVES_MAGENTA_2",
    "FLOOR_NERVES_MAGENTA_3",
    "FLOOR_NERVES_MAGENTA_4",
    "FLOOR_NERVES_MAGENTA_5",
    "FLOOR_NERVES_MAGENTA_6",
    "FLOOR_NERVES_BROWN",
    "FLOOR_NERVES_BROWN_1",
    "FLOOR_NERVES_BROWN_2",
    "FLOOR_NERVES_BROWN_3",
    "FLOOR_NERVES_BROWN_4",
    "FLOOR_NERVES_BROWN_5",
    "FLOOR_NERVES_BROWN_6",
    "FLOOR_NERVES_LIGHTGRAY",
    "FLOOR_NERVES_LIGHTGRAY_1",
    "FLOOR_NERVES_LIGHTGRAY_2",
    "FLOOR_NERVES_LIGHTGRAY_3",
    "FLOOR_NERVES_LIGHTGRAY_4",
    "FLOOR_NERVES_LIGHTGRAY_5",
    "FLOOR_NERVES_LIGHTGRAY_6",
    "FLOOR_NERVES_DARKGRAY",
    "FLOOR_NERVES_DARKGRAY_1",
    "FLOOR_NERVES_DARKGRAY_2",
    "FLOOR_NERVES_DARKGRAY_3",
    "FLOOR_NERVES_DARKGRAY_4",
    "FLOOR_NERVES_DARKGRAY_5",
    "FLOOR_NERVES_DARKGRAY_6",
    "FLOOR_NERVES_LIGHTBLUE",
    "FLOOR_NERVES_LIGHTBLUE_1",
    "FLOOR_NERVES_LIGHTBLUE_2",
    "FLOOR_NERVES_LIGHTBLUE_3",
    "FLOOR_NERVES_LIGHTBLUE_4",
    "FLOOR_NERVES_LIGHTBLUE_5",
    "FLOOR_NERVES_LIGHTBLUE_6",
    "FLOOR_NERVES_LIGHTGREEN",
    "FLOOR_NERVES_LIGHTGREEN_1",
    "FLOOR_NERVES_LIGHTGREEN_2",
    "FLOOR_NERVES_LIGHTGREEN_3",
    "FLOOR_NERVES_LIGHTGREEN_4",
    "FLOOR_NERVES_LIGHTGREEN_5",
    "FLOOR_NERVES_LIGHTGREEN_6",
    "FLOOR_NERVES_LIGHTCYAN",
    "FLOOR_NERVES_LIGHTCYAN_1",
    "FLOOR_NERVES_LIGHTCYAN_2",
    "FLOOR_NERVES_LIGHTCYAN_3",
    "FLOOR_NERVES_LIGHTCYAN_4",
    "FLOOR_NERVES_LIGHTCYAN_5",
    "FLOOR_NERVES_LIGHTCYAN_6",
    "FLOOR_NERVES_LIGHTRED",
    "FLOOR_NERVES_LIGHTRED_1",
    "FLOOR_NERVES_LIGHTRED_2",
    "FLOOR_NERVES_LIGHTRED_3",
    "FLOOR_NERVES_LIGHTRED_4",
    "FLOOR_NERVES_LIGHTRED_5",
    "FLOOR_NERVES_LIGHTRED_6",
    "FLOOR_NERVES_LIGHTMAGENTA",
    "FLOOR_NERVES_LIGHTMAGENTA_1",
    "FLOOR_NERVES_LIGHTMAGENTA_2",
    "FLOOR_NERVES_LIGHTMAGENTA_3",
    "FLOOR_NERVES_LIGHTMAGENTA_4",
    "FLOOR_NERVES_LIGHTMAGENTA_5",
    "FLOOR_NERVES_LIGHTMAGENTA_6",
    "FLOOR_NERVES_YELLOW",
    "FLOOR_NERVES_YELLOW_1",
    "FLOOR_NERVES_YELLOW_2",
    "FLOOR_NERVES_YELLOW_3",
    "FLOOR_NERVES_YELLOW_4",
    "FLOOR_NERVES_YELLOW_5",
    "FLOOR_NERVES_YELLOW_6",
    "FLOOR_NERVES_WHITE",
    "FLOOR_NERVES_WHITE_1",
    "FLOOR_NERVES_WHITE_2",
    "FLOOR_NERVES_WHITE_3",
    "FLOOR_NERVES_WHITE_4",
    "FLOOR_NERVES_WHITE_5",
    "FLOOR_NERVES_WHITE_6",
    "HALO_GRASS2",
    "HALO_GRASS2_1",
    "HALO_GRASS2_2",
    "HALO_GRASS2_3",
    "HALO_GRASS2_4",
    "HALO_GRASS2_5",
    "HALO_GRASS2_6",
    "HALO_GRASS2_7",
    "HALO_GRASS2_8",
    "HALO_VAULT",
    "HALO_VAULT_1",
    "HALO_VAULT_2",
    "HALO_VAULT_3",
    "HALO_VAULT_4",
    "HALO_VAULT_5",
    "HALO_VAULT_6",
    "HALO_VAULT_7",
    "HALO_VAULT_8",
    "FLOOR_DIRT",
    "FLOOR_DIRT_1",
    "FLOOR_DIRT_2",
    "HALO_DIRT",
    "HALO_DIRT_1",
    "HALO_DIRT_2",
    "HALO_DIRT_3",
    "HALO_DIRT_4",
    "HALO_DIRT_5",
    "HALO_DIRT_6",
    "HALO_DIRT_7",
    "HALO_DIRT_8",
    "TUTORIAL_PAD",
    "FLOOR_LIMESTONE",
    "FLOOR_LIMESTONE_1",
    "FLOOR_LIMESTONE_2",
    "FLOOR_LIMESTONE_3",
    "FLOOR_LIMESTONE_4",
    "FLOOR_LIMESTONE_5",
    "FLOOR_LIMESTONE_6",
    "FLOOR_LIMESTONE_7",
    "FLOOR_LIMESTONE_8",
    "FLOOR_LIMESTONE_9",
    "FLOOR_W_MARBLE",
    "FLOOR_W_MARBLE_1",
    "FLOOR_W_MARBLE_2",
    "FLOOR_W_MARBLE_3",
    "FLOOR_W_MARBLE_4",
    "FLOOR_W_MARBLE_5",
    "FLOOR_W_MARBLE_6",
    "FLOOR_W_MARBLE_7",
    "FLOOR_W_MARBLE_8",
    "FLOOR_W_MARBLE_9",
    "SIGIL_CURVE_N_E",
    "SIGIL_CURVE_N_W",
    "SIGIL_CURVE_S_E",
    "SIGIL_CURVE_S_W",
    "SIGIL_STRAIGHT_E_W",
    "SIGIL_STRAIGHT_N_S",
    "SIGIL_STRAIGHT_NE_SW",
    "SIGIL_STRAIGHT_NW_SE",
    "SIGIL_CROSS",
    "SIGIL_CIRCLE",
    "SIGIL_RHOMBUS",
    "SIGIL_Y",
    "SIGIL_Y_INVERTED",
    "SIGIL_Y_RIGHT",
    "SIGIL_Y_LEFT",
    "SIGIL_Y_LEFTLEANING",
    "SIGIL_Y_RIGHTLEANING",
    "SIGIL_ALGIZ_LEFT",
    "SIGIL_ALGIZ_RIGHT",
    "SIGIL_STRAIGHT_E_NW",
    "SIGIL_STRAIGHT_E_SW",
    "SIGIL_STRAIGHT_W_NE",
    "SIGIL_STRAIGHT_W_SE",
    "SIGIL_STRAIGHT_N_SE",
    "SIGIL_STRAIGHT_N_SW",
    "SIGIL_STRAIGHT_S_NE",
    "SIGIL_STRAIGHT_S_NW",
    "SIGIL_FOURWAY",
    "SIGIL_SHARP_E_NE",
    "SIGIL_SHARP_W_SW",
    "SIGIL_STRAIGHT_E_NE_SW",
    "FLOOR_INFERNAL",
    "FLOOR_INFERNAL_1",
    "FLOOR_INFERNAL_2",
    "FLOOR_INFERNAL_3",
    "FLOOR_INFERNAL_4",
    "FLOOR_INFERNAL_5",
    "FLOOR_INFERNAL_6",
    "FLOOR_INFERNAL_7",
    "FLOOR_INFERNAL_8",
    "FLOOR_INFERNAL_9",
    "FLOOR_INFERNAL_10",
    "FLOOR_INFERNAL_11",
    "FLOOR_INFERNAL_12",
    "FLOOR_INFERNAL_13",
    "FLOOR_INFERNAL_14",
    "FLOOR_INFERNAL_BLANK",
    "FLOOR_GAUNTLET",
    "FLOOR_GAUNTLET_1",
    "FLOOR_GAUNTLET_2",
    "FLOOR_GAUNTLET_3",
    "FLOOR_CRYPT",
    "FLOOR_CRYPT_1",
    "FLOOR_CRYPT_2",
    "FLOOR_CRYPT_3",
    "FLOOR_CRYPT_4",
    "FLOOR_CRYPT_5",
    "FLOOR_CRYPT_6",
    "FLOOR_CRYPT_7",
    "FLOOR_CRYPT_8",
    "FLOOR_CRYPT_9",
    "FLOOR_IRON",
    "FLOOR_IRON_1",
    "FLOOR_IRON_2",
    "FLOOR_IRON_3",
    "FLOOR_IRON_4",
    "FLOOR_IRON_5",
    "FLOOR_BLACK_COBALT",
    "FLOOR_BLACK_COBALT_1",
    "FLOOR_BLACK_COBALT_2",
    "FLOOR_BLACK_COBALT_3",
    "FLOOR_BLACK_COBALT_4",
    "FLOOR_BLACK_COBALT_5",
    "FLOOR_BLACK_COBALT_6",
    "FLOOR_BLACK_COBALT_7",
    "FLOOR_BLACK_COBALT_8",
    "FLOOR_BLACK_COBALT_9",
    "FLOOR_BLACK_COBALT_10",
    "FLOOR_BLACK_COBALT_11",
    "FLOOR_FROZEN",
    "FLOOR_FROZEN_1",
    "FLOOR_FROZEN_2",
    "FLOOR_FROZEN_3",
    "FLOOR_FROZEN_4",
    "FLOOR_FROZEN_5",
    "FLOOR_FROZEN_6",
    "FLOOR_FROZEN_7",
    "FLOOR_FROZEN_8",
    "FLOOR_FROZEN_9",
    "FLOOR_FROZEN_10",
    "FLOOR_FROZEN_11",
    "FLOOR_FROZEN_12",
    "FLOOR_DEMONIC",
    "FLOOR_DEMONIC_1",
    "FLOOR_DEMONIC_2",
    "FLOOR_DEMONIC_3",
    "FLOOR_DEMONIC_4",
    "FLOOR_DEMONIC_5",
    "FLOOR_DEMONIC_6",
    "FLOOR_DEMONIC_7",
    "FLOOR_DEMONIC_8",
    "FLOOR_DEMONIC_BLUE",
    "FLOOR_DEMONIC_BLUE_1",
    "FLOOR_DEMONIC_BLUE_2",
    "FLOOR_DEMONIC_BLUE_3",
    "FLOOR_DEMONIC_BLUE_4",
    "FLOOR_DEMONIC_BLUE_5",
    "FLOOR_DEMONIC_BLUE_6",
    "FLOOR_DEMONIC_BLUE_7",
    "FLOOR_DEMONIC_BLUE_8",
    "FLOOR_DEMONIC_GREEN",
    "FLOOR_DEMONIC_GREEN_1",
    "FLOOR_DEMONIC_GREEN_2",
    "FLOOR_DEMONIC_GREEN_3",
    "FLOOR_DEMONIC_GREEN_4",
    "FLOOR_DEMONIC_GREEN_5",
    "FLOOR_DEMONIC_GREEN_6",
    "FLOOR_DEMONIC_GREEN_7",
    "FLOOR_DEMONIC_GREEN_8",
    "FLOOR_DEMONIC_CYAN",
    "FLOOR_DEMONIC_CYAN_1",
    "FLOOR_DEMONIC_CYAN_2",
    "FLOOR_DEMONIC_CYAN_3",
    "FLOOR_DEMONIC_CYAN_4",
    "FLOOR_DEMONIC_CYAN_5",
    "FLOOR_DEMONIC_CYAN_6",
    "FLOOR_DEMONIC_CYAN_7",
    "FLOOR_DEMONIC_CYAN_8",
    "FLOOR_DEMONIC_MAGENTA",
    "FLOOR_DEMONIC_MAGENTA_1",
    "FLOOR_DEMONIC_MAGENTA_2",
    "FLOOR_DEMONIC_MAGENTA_3",
    "FLOOR_DEMONIC_MAGENTA_4",
    "FLOOR_DEMONIC_MAGENTA_5",
    "FLOOR_DEMONIC_MAGENTA_6",
    "FLOOR_DEMONIC_MAGENTA_7",
    "FLOOR_DEMONIC_MAGENTA_8",
    "FLOOR_DEMONIC_BROWN",
    "FLOOR_DEMONIC_BROWN_1",
    "FLOOR_DEMONIC_BROWN_2",
    "FLOOR_DEMONIC_BROWN_3",
    "FLOOR_DEMONIC_BROWN_4",
    "FLOOR_DEMONIC_BROWN_5",
    "FLOOR_DEMONIC_BROWN_6",
    "FLOOR_DEMONIC_BROWN_7",
    "FLOOR_DEMONIC_BROWN_8",
    "FLOOR_DEMONIC_LIGHTGRAY",
    "FLOOR_DEMONIC_LIGHTGRAY_1",
    "FLOOR_DEMONIC_LIGHTGRAY_2",
    "FLOOR_DEMONIC_LIGHTGRAY_3",
    "FLOOR_DEMONIC_LIGHTGRAY_4",
    "FLOOR_DEMONIC_LIGHTGRAY_5",
    "FLOOR_DEMONIC_LIGHTGRAY_6",
    "FLOOR_DEMONIC_LIGHTGRAY_7",
    "FLOOR_DEMONIC_LIGHTGRAY_8",
    "FLOOR_DEMONIC_DARKGRAY",
    "FLOOR_DEMONIC_DARKGRAY_1",
    "FLOOR_DEMONIC_DARKGRAY_2",
    "FLOOR_DEMONIC_DARKGRAY_3",
    "FLOOR_DEMONIC_DARKGRAY_4",
    "FLOOR_DEMONIC_DARKGRAY_5",
    "FLOOR_DEMONIC_DARKGRAY_6",
    "FLOOR_DEMONIC_DARKGRAY_7",
    "FLOOR_DEMONIC_DARKGRAY_8",
    "FLOOR_DEMONIC_LIGHTBLUE",
    "FLOOR_DEMONIC_LIGHTBLUE_1",
    "FLOOR_DEMONIC_LIGHTBLUE_2",
    "FLOOR_DEMONIC_LIGHTBLUE_3",
    "FLOOR_DEMONIC_LIGHTBLUE_4",
    "FLOOR_DEMONIC_LIGHTBLUE_5",
    "FLOOR_DEMONIC_LIGHTBLUE_6",
    "FLOOR_DEMONIC_LIGHTBLUE_7",
    "FLOOR_DEMONIC_LIGHTBLUE_8",
    "FLOOR_DEMONIC_LIGHTGREEN",
    "FLOOR_DEMONIC_LIGHTGREEN_1",
    "FLOOR_DEMONIC_LIGHTGREEN_2",
    "FLOOR_DEMONIC_LIGHTGREEN_3",
    "FLOOR_DEMONIC_LIGHTGREEN_4",
    "FLOOR_DEMONIC_LIGHTGREEN_5",
    "FLOOR_DEMONIC_LIGHTGREEN_6",
    "FLOOR_DEMONIC_LIGHTGREEN_7",
    "FLOOR_DEMONIC_LIGHTGREEN_8",
    "FLOOR_DEMONIC_LIGHTCYAN",
    "FLOOR_DEMONIC_LIGHTCYAN_1",
    "FLOOR_DEMONIC_LIGHTCYAN_2",
    "FLOOR_DEMONIC_LIGHTCYAN_3",
    "FLOOR_DEMONIC_LIGHTCYAN_4",
    "FLOOR_DEMONIC_LIGHTCYAN_5",
    "FLOOR_DEMONIC_LIGHTCYAN_6",
    "FLOOR_DEMONIC_LIGHTCYAN_7",
    "FLOOR_DEMONIC_LIGHTCYAN_8",
    "FLOOR_DEMONIC_LIGHTRED",
    "FLOOR_DEMONIC_LIGHTRED_1",
    "FLOOR_DEMONIC_LIGHTRED_2",
    "FLOOR_DEMONIC_LIGHTRED_3",
    "FLOOR_DEMONIC_LIGHTRED_4",
    "FLOOR_DEMONIC_LIGHTRED_5",
    "FLOOR_DEMONIC_LIGHTRED_6",
    "FLOOR_DEMONIC_LIGHTRED_7",
    "FLOOR_DEMONIC_LIGHTRED_8",
    "FLOOR_DEMONIC_LIGHTMAGENTA",
    "FLOOR_DEMONIC_LIGHTMAGENTA_1",
    "FLOOR_DEMONIC_LIGHTMAGENTA_2",
    "FLOOR_DEMONIC_LIGHTMAGENTA_3",
    "FLOOR_DEMONIC_LIGHTMAGENTA_4",
    "FLOOR_DEMONIC_LIGHTMAGENTA_5",
    "FLOOR_DEMONIC_LIGHTMAGENTA_6",
    "FLOOR_DEMONIC_LIGHTMAGENTA_7",
    "FLOOR_DEMONIC_LIGHTMAGENTA_8",
    "FLOOR_DEMONIC_YELLOW",
    "FLOOR_DEMONIC_YELLOW_1",
    "FLOOR_DEMONIC_YELLOW_2",
    "FLOOR_DEMONIC_YELLOW_3",
    "FLOOR_DEMONIC_YELLOW_4",
    "FLOOR_DEMONIC_YELLOW_5",
    "FLOOR_DEMONIC_YELLOW_6",
    "FLOOR_DEMONIC_YELLOW_7",
    "FLOOR_DEMONIC_YELLOW_8",
    "FLOOR_DEMONIC_WHITE",
    "FLOOR_DEMONIC_WHITE_1",
    "FLOOR_DEMONIC_WHITE_2",
    "FLOOR_DEMONIC_WHITE_3",
    "FLOOR_DEMONIC_WHITE_4",
    "FLOOR_DEMONIC_WHITE_5",
    "FLOOR_DEMONIC_WHITE_6",
    "FLOOR_DEMONIC_WHITE_7",
    "FLOOR_DEMONIC_WHITE_8",
    "FLOOR_GREEN_BONES",
    "FLOOR_GREEN_BONES_1",
    "FLOOR_GREEN_BONES_2",
    "FLOOR_GREEN_BONES_3",
    "FLOOR_GREEN_BONES_4",
    "FLOOR_GREEN_BONES_5",
    "FLOOR_GREEN_BONES_6",
    "FLOOR_GREEN_BONES_7",
    "FLOOR_GREEN_BONES_8",
    "FLOOR_GREEN_BONES_9",
    "FLOOR_GREEN_BONES_10",
    "FLOOR_GREEN_BONES_11",
    "FLOOR_WOODGROUND",
    "FLOOR_WOODGROUND_1",
    "FLOOR_WOODGROUND_2",
    "FLOOR_WOODGROUND_3",
    "FLOOR_WOODGROUND_4",
    "FLOOR_WOODGROUND_5",
    "FLOOR_WOODGROUND_6",
    "FLOOR_WOODGROUND_7",
    "FLOOR_WOODGROUND_8",
    "FLOOR_STUDIO",
    "FLOOR_STUDIO_1",
    "FLOOR_STUDIO_2",
    "FLOOR_STUDIO_3",
    "FLOOR_STUDIO_4",
    "FLOOR_STUDIO_5",
    "FLOOR_STUDIO_6",
    "FLOOR_STUDIO_7",
    "FLOOR_STUDIO_8",
    "FLOOR_STUDIO_9",
    "FLOOR_CAGE",
    "FLOOR_CAGE_1",
    "FLOOR_CAGE_2",
    "FLOOR_CAGE_3",
    "FLOOR_CAGE_4",
    "FLOOR_CAGE_5",
    "FLOOR_ETCHED",
    "FLOOR_ETCHED_1",
    "FLOOR_ETCHED_2",
    "FLOOR_ETCHED_3",
    "FLOOR_ETCHED_4",
    "FLOOR_ETCHED_5",
    "FLOOR_MOSAIC",
    "FLOOR_MOSAIC_1",
    "FLOOR_MOSAIC_2",
    "FLOOR_MOSAIC_3",
    "FLOOR_MOSAIC_4",
    "FLOOR_MOSAIC_5",
    "FLOOR_MOSAIC_6",
    "FLOOR_MOSAIC_7",
    "FLOOR_MOSAIC_8",
    "FLOOR_MOSAIC_9",
    "FLOOR_MOSAIC_10",
    "FLOOR_MOSAIC_11",
    "FLOOR_MOSAIC_12",
    "FLOOR_MOSAIC_13",
    "FLOOR_MOSAIC_14",
    "FLOOR_MOSAIC_15",
    "DNGN_ENDLESS_SALT",
    "DNGN_ENDLESS_SALT_1",
    "DNGN_ENDLESS_SALT_2",
    "DNGN_ENDLESS_SALT_3",
    "DNGN_LAVA",
    "DNGN_LAVA_1",
    "DNGN_LAVA_2",
    "DNGN_LAVA_3",
    "DNGN_LAVA_4",
    "DNGN_LAVA_5",
    "DNGN_LAVA_6",
    "DNGN_LAVA_7",
    "DNGN_LAVA_8",
    "DNGN_LAVA_9",
    "DNGN_LAVA_10",
    "DNGN_LAVA_11",
    "DNGN_LAVA_12",
    "DNGN_LAVA_13",
    "DNGN_LAVA_14",
    "DNGN_LAVA_15",
    "DNGN_LAVA_SEA",
    "DNGN_LAVA_SEA_1",
    "DNGN_LAVA_SEA_2",
    "DNGN_LAVA_SEA_3",
    "DNGN_LAVA_SEA_4",
    "DNGN_LAVA_SEA_5",
    "DNGN_LAVA_SEA_6",
    "DNGN_LAVA_SEA_7",
    "DNGN_LAVA_SEA_8",
    "DNGN_LAVA_SEA_9",
    "DNGN_LAVA_SEA_10",
    "DNGN_LAVA_SEA_11",
    "DNGN_LAVA_SEA_12",
    "DNGN_LAVA_SEA_13",
    "DNGN_LAVA_SEA_14",
    "DNGN_LAVA_SEA_15",
    "DNGN_OPEN_SEA",
    "DNGN_OPEN_SEA_1",
    "DNGN_DEEP_WATER",
    "DNGN_DEEP_WATER_1",
    "DNGN_SHALLOW_WATER",
    "DNGN_SHALLOW_WATER_1",
    "DNGN_SHALLOW_WATER_DISTURBANCE",
    "DNGN_SHALLOW_WATER_DISTURBANCE_1",
    "DNGN_DEEP_WATER_MURKY",
    "DNGN_DEEP_WATER_MURKY_1",
    "DNGN_SHALLOW_WATER_MURKY",
    "DNGN_SHALLOW_WATER_MURKY_1",
    "DNGN_SHALLOW_WATER_MURKY_DISTURBANCE",
    "DNGN_SHALLOW_WATER_MURKY_DISTURBANCE_1",
    "DNGN_TOXIC_BOG",
    "DNGN_TOXIC_BOG_1",
    "SHORE_N",
    "SHORE_W",
    "SHORE_E",
    "SHORE_NW",
    "SHORE_NE",
    "DNGN_WAVE_N",
    "DNGN_WAVE_NE",
    "DNGN_WAVE_E",
    "DNGN_WAVE_SE",
    "DNGN_WAVE_S",
    "DNGN_WAVE_SW",
    "DNGN_WAVE_W",
    "DNGN_WAVE_NW",
    "MURKY_WAVE_N",
    "MURKY_WAVE_NE",
    "MURKY_WAVE_E",
    "MURKY_WAVE_SE",
    "MURKY_WAVE_S",
    "MURKY_WAVE_SW",
    "MURKY_WAVE_W",
    "MURKY_WAVE_NW",
    "SHOALS_DEEP_WATER",
    "SHOALS_DEEP_WATER_1",
    "SHOALS_DEEP_WATER_2",
    "SHOALS_DEEP_WATER_3",
    "SHOALS_DEEP_WATER_4",
    "SHOALS_DEEP_WATER_5",
    "SHOALS_DEEP_WATER_6",
    "SHOALS_DEEP_WATER_7",
    "SHOALS_DEEP_WATER_8",
    "SHOALS_DEEP_WATER_9",
    "SHOALS_DEEP_WATER_10",
    "SHOALS_DEEP_WATER_11",
    "SHOALS_SHALLOW_WATER",
    "SHOALS_SHALLOW_WATER_1",
    "SHOALS_SHALLOW_WATER_2",
    "SHOALS_SHALLOW_WATER_3",
    "SHOALS_SHALLOW_WATER_4",
    "SHOALS_SHALLOW_WATER_5",
    "SHOALS_SHALLOW_WATER_6",
    "SHOALS_SHALLOW_WATER_7",
    "SHOALS_SHALLOW_WATER_8",
    "SHOALS_SHALLOW_WATER_9",
    "SHOALS_SHALLOW_WATER_10",
    "SHOALS_SHALLOW_WATER_11",
    "SHOALS_SHALLOW_WATER_DISTURBANCE",
    "SHOALS_SHALLOW_WATER_DISTURBANCE_1",
    "SHOALS_SHALLOW_WATER_DISTURBANCE_2",
    "WAVE_DEEP_CORNER_NE",
    "WAVE_DEEP_CORNER_NE_1",
    "WAVE_DEEP_CORNER_NW",
    "WAVE_DEEP_CORNER_NW_1",
    "WAVE_DEEP_CORNER_SE",
    "WAVE_DEEP_CORNER_SE_1",
    "WAVE_DEEP_CORNER_SW",
    "WAVE_DEEP_CORNER_SW_1",
    "WAVE_DEEP_N",
    "WAVE_DEEP_N_1",
    "WAVE_DEEP_S",
    "WAVE_DEEP_S_1",
    "WAVE_DEEP_E",
    "WAVE_DEEP_E_1",
    "WAVE_DEEP_W",
    "WAVE_DEEP_W_1",
    "WAVE_CORNER_NE",
    "WAVE_CORNER_NW",
    "WAVE_CORNER_SE",
    "WAVE_CORNER_SW",
    "WAVE_N",
    "WAVE_S",
    "WAVE_E",
    "WAVE_W",
    "WAVE_INK_CORNER_NE",
    "WAVE_INK_CORNER_NW",
    "WAVE_INK_CORNER_SE",
    "WAVE_INK_CORNER_SW",
    "WAVE_INK_N",
    "WAVE_INK_S",
    "WAVE_INK_E",
    "WAVE_INK_W",
    "WAVE_INK_FULL",
    "LIQUEFACTION",
    "LIQUEFACTION_1",
};

const char *tile_floor_name(tileidx_t idx)
{
    ASSERT_RANGE(idx, 0, TILE_FLOOR_MAX);
    return _tile_floor_name[idx - 0];
}

static tile_info _tile_floor_info[TILE_FLOOR_MAX - 0] =
{
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
    tile_info(0, 0, 0, 0, 0, 0, 0, 0),
};

tile_info &tile_floor_info(tileidx_t idx)
{
    ASSERT_RANGE(idx, 0, TILE_FLOOR_MAX);
    return _tile_floor_info[idx - 0];
}


typedef pair<const char*, tileidx_t> _name_pair;

static _name_pair floor_name_pairs[] =
{
    _name_pair("borg_floor", 284 + 0),
    _name_pair("dngn_deep_water", 901 + 0),
    _name_pair("dngn_deep_water_murky", 907 + 0),
    _name_pair("dngn_endless_salt", 863 + 0),
    _name_pair("dngn_error", 1 + 0),
    _name_pair("dngn_lava", 867 + 0),
    _name_pair("dngn_lava_sea", 883 + 0),
    _name_pair("dngn_open_sea", 899 + 0),
    _name_pair("dngn_shallow_water", 903 + 0),
    _name_pair("dngn_shallow_water_disturbance", 905 + 0),
    _name_pair("dngn_shallow_water_murky", 909 + 0),
    _name_pair("dngn_shallow_water_murky_disturbance", 911 + 0),
    _name_pair("dngn_toxic_bog", 913 + 0),
    _name_pair("dngn_unseen", 0 + 0),
    _name_pair("dngn_wave_e", 922 + 0),
    _name_pair("dngn_wave_n", 920 + 0),
    _name_pair("dngn_wave_ne", 921 + 0),
    _name_pair("dngn_wave_nw", 927 + 0),
    _name_pair("dngn_wave_s", 924 + 0),
    _name_pair("dngn_wave_se", 923 + 0),
    _name_pair("dngn_wave_sw", 925 + 0),
    _name_pair("dngn_wave_w", 926 + 0),
    _name_pair("floor_black_cobalt", 644 + 0),
    _name_pair("floor_cage", 835 + 0),
    _name_pair("floor_cobble_blood", 356 + 0),
    _name_pair("floor_crypt", 628 + 0),
    _name_pair("floor_crystal_squares", 391 + 0),
    _name_pair("floor_demonic", 669 + 0),
    _name_pair("floor_demonic_blue", 678 + 0),
    _name_pair("floor_demonic_brown", 714 + 0),
    _name_pair("floor_demonic_cyan", 696 + 0),
    _name_pair("floor_demonic_darkgray", 732 + 0),
    _name_pair("floor_demonic_green", 687 + 0),
    _name_pair("floor_demonic_lightblue", 741 + 0),
    _name_pair("floor_demonic_lightcyan", 759 + 0),
    _name_pair("floor_demonic_lightgray", 723 + 0),
    _name_pair("floor_demonic_lightgreen", 750 + 0),
    _name_pair("floor_demonic_lightmagenta", 777 + 0),
    _name_pair("floor_demonic_lightred", 768 + 0),
    _name_pair("floor_demonic_magenta", 705 + 0),
    _name_pair("floor_demonic_red", 669 + 0),
    _name_pair("floor_demonic_white", 795 + 0),
    _name_pair("floor_demonic_yellow", 786 + 0),
    _name_pair("floor_depthstone", 272 + 0),
    _name_pair("floor_dirt", 544 + 0),
    _name_pair("floor_etched", 841 + 0),
    _name_pair("floor_frozen", 656 + 0),
    _name_pair("floor_gauntlet", 624 + 0),
    _name_pair("floor_grass", 397 + 0),
    _name_pair("floor_grass_dirt_mix", 418 + 0),
    _name_pair("floor_green_bones", 804 + 0),
    _name_pair("floor_grey_dirt", 2 + 0),
    _name_pair("floor_grey_dirt_b", 10 + 0),
    _name_pair("floor_hall", 162 + 0),
    _name_pair("floor_ice", 170 + 0),
    _name_pair("floor_icy", 210 + 0),
    _name_pair("floor_infernal", 608 + 0),
    _name_pair("floor_infernal_blank", 623 + 0),
    _name_pair("floor_iron", 638 + 0),
    _name_pair("floor_lair", 174 + 0),
    _name_pair("floor_limestone", 557 + 0),
    _name_pair("floor_marble", 368 + 0),
    _name_pair("floor_mosaic", 847 + 0),
    _name_pair("floor_moss", 198 + 0),
    _name_pair("floor_mud", 166 + 0),
    _name_pair("floor_nerves", 421 + 0),
    _name_pair("floor_nerves_blue", 428 + 0),
    _name_pair("floor_nerves_brown", 456 + 0),
    _name_pair("floor_nerves_cyan", 442 + 0),
    _name_pair("floor_nerves_darkgray", 470 + 0),
    _name_pair("floor_nerves_green", 435 + 0),
    _name_pair("floor_nerves_lightblue", 477 + 0),
    _name_pair("floor_nerves_lightcyan", 491 + 0),
    _name_pair("floor_nerves_lightgray", 463 + 0),
    _name_pair("floor_nerves_lightgreen", 484 + 0),
    _name_pair("floor_nerves_lightmagenta", 505 + 0),
    _name_pair("floor_nerves_lightred", 498 + 0),
    _name_pair("floor_nerves_magenta", 449 + 0),
    _name_pair("floor_nerves_red", 421 + 0),
    _name_pair("floor_nerves_white", 519 + 0),
    _name_pair("floor_nerves_yellow", 512 + 0),
    _name_pair("floor_normal", 2 + 0),
    _name_pair("floor_orc", 190 + 0),
    _name_pair("floor_pebble", 18 + 0),
    _name_pair("floor_pebble_blue", 36 + 0),
    _name_pair("floor_pebble_brown", 27 + 0),
    _name_pair("floor_pebble_cyan", 54 + 0),
    _name_pair("floor_pebble_darkbrown", 153 + 0),
    _name_pair("floor_pebble_darkgray", 81 + 0),
    _name_pair("floor_pebble_green", 45 + 0),
    _name_pair("floor_pebble_lightblue", 90 + 0),
    _name_pair("floor_pebble_lightcyan", 108 + 0),
    _name_pair("floor_pebble_lightgray", 18 + 0),
    _name_pair("floor_pebble_lightgreen", 99 + 0),
    _name_pair("floor_pebble_lightmagenta", 126 + 0),
    _name_pair("floor_pebble_lightred", 117 + 0),
    _name_pair("floor_pebble_magenta", 72 + 0),
    _name_pair("floor_pebble_red", 63 + 0),
    _name_pair("floor_pebble_white", 144 + 0),
    _name_pair("floor_pebble_yellow", 135 + 0),
    _name_pair("floor_rough", 288 + 0),
    _name_pair("floor_rough_blue", 292 + 0),
    _name_pair("floor_rough_brown", 308 + 0),
    _name_pair("floor_rough_cyan", 300 + 0),
    _name_pair("floor_rough_darkgray", 316 + 0),
    _name_pair("floor_rough_green", 296 + 0),
    _name_pair("floor_rough_lightblue", 320 + 0),
    _name_pair("floor_rough_lightcyan", 328 + 0),
    _name_pair("floor_rough_lightgray", 312 + 0),
    _name_pair("floor_rough_lightgreen", 324 + 0),
    _name_pair("floor_rough_lightmagenta", 336 + 0),
    _name_pair("floor_rough_lightred", 332 + 0),
    _name_pair("floor_rough_magenta", 304 + 0),
    _name_pair("floor_rough_red", 288 + 0),
    _name_pair("floor_rough_white", 344 + 0),
    _name_pair("floor_rough_yellow", 340 + 0),
    _name_pair("floor_salt", 246 + 0),
    _name_pair("floor_sand", 348 + 0),
    _name_pair("floor_sandstone", 374 + 0),
    _name_pair("floor_slime", 202 + 0),
    _name_pair("floor_slime_acidic", 206 + 0),
    _name_pair("floor_snake_a", 230 + 0),
    _name_pair("floor_snake_c", 234 + 0),
    _name_pair("floor_snake_d", 238 + 0),
    _name_pair("floor_spider", 252 + 0),
    _name_pair("floor_studio", 825 + 0),
    _name_pair("floor_swamp", 242 + 0),
    _name_pair("floor_tomb", 264 + 0),
    _name_pair("floor_vault", 268 + 0),
    _name_pair("floor_vines", 277 + 0),
    _name_pair("floor_volcanic", 384 + 0),
    _name_pair("floor_w_marble", 567 + 0),
    _name_pair("floor_woodground", 816 + 0),
    _name_pair("halo_dirt", 547 + 0),
    _name_pair("halo_grass", 409 + 0),
    _name_pair("halo_grass2", 526 + 0),
    _name_pair("halo_vault", 535 + 0),
    _name_pair("ice_overlay", 222 + 0),
    _name_pair("liquefaction", 996 + 0),
    _name_pair("murky_wave_e", 930 + 0),
    _name_pair("murky_wave_n", 928 + 0),
    _name_pair("murky_wave_ne", 929 + 0),
    _name_pair("murky_wave_nw", 935 + 0),
    _name_pair("murky_wave_s", 932 + 0),
    _name_pair("murky_wave_se", 931 + 0),
    _name_pair("murky_wave_sw", 933 + 0),
    _name_pair("murky_wave_w", 934 + 0),
    _name_pair("shoals_deep_water", 936 + 0),
    _name_pair("shoals_shallow_water", 948 + 0),
    _name_pair("shoals_shallow_water_disturbance", 960 + 0),
    _name_pair("shore_e", 917 + 0),
    _name_pair("shore_n", 915 + 0),
    _name_pair("shore_ne", 919 + 0),
    _name_pair("shore_nw", 918 + 0),
    _name_pair("shore_w", 916 + 0),
    _name_pair("sigil_algiz_left", 594 + 0),
    _name_pair("sigil_algiz_right", 595 + 0),
    _name_pair("sigil_circle", 586 + 0),
    _name_pair("sigil_cross", 585 + 0),
    _name_pair("sigil_curve_n_e", 577 + 0),
    _name_pair("sigil_curve_n_w", 578 + 0),
    _name_pair("sigil_curve_s_e", 579 + 0),
    _name_pair("sigil_curve_s_w", 580 + 0),
    _name_pair("sigil_fourway", 604 + 0),
    _name_pair("sigil_rhombus", 587 + 0),
    _name_pair("sigil_sharp_e_ne", 605 + 0),
    _name_pair("sigil_sharp_w_sw", 606 + 0),
    _name_pair("sigil_straight_e_ne_sw", 607 + 0),
    _name_pair("sigil_straight_e_nw", 596 + 0),
    _name_pair("sigil_straight_e_sw", 597 + 0),
    _name_pair("sigil_straight_e_w", 581 + 0),
    _name_pair("sigil_straight_n_s", 582 + 0),
    _name_pair("sigil_straight_n_se", 600 + 0),
    _name_pair("sigil_straight_n_sw", 601 + 0),
    _name_pair("sigil_straight_ne_sw", 583 + 0),
    _name_pair("sigil_straight_nw_se", 584 + 0),
    _name_pair("sigil_straight_s_ne", 602 + 0),
    _name_pair("sigil_straight_s_nw", 603 + 0),
    _name_pair("sigil_straight_w_ne", 598 + 0),
    _name_pair("sigil_straight_w_se", 599 + 0),
    _name_pair("sigil_y", 588 + 0),
    _name_pair("sigil_y_inverted", 589 + 0),
    _name_pair("sigil_y_left", 591 + 0),
    _name_pair("sigil_y_leftleaning", 592 + 0),
    _name_pair("sigil_y_right", 590 + 0),
    _name_pair("sigil_y_rightleaning", 593 + 0),
    _name_pair("slime_overlay", 214 + 0),
    _name_pair("tutorial_pad", 556 + 0),
    _name_pair("wave_corner_ne", 979 + 0),
    _name_pair("wave_corner_nw", 980 + 0),
    _name_pair("wave_corner_se", 981 + 0),
    _name_pair("wave_corner_sw", 982 + 0),
    _name_pair("wave_deep_corner_ne", 963 + 0),
    _name_pair("wave_deep_corner_nw", 965 + 0),
    _name_pair("wave_deep_corner_se", 967 + 0),
    _name_pair("wave_deep_corner_sw", 969 + 0),
    _name_pair("wave_deep_e", 975 + 0),
    _name_pair("wave_deep_n", 971 + 0),
    _name_pair("wave_deep_s", 973 + 0),
    _name_pair("wave_deep_w", 977 + 0),
    _name_pair("wave_e", 985 + 0),
    _name_pair("wave_ink_corner_ne", 987 + 0),
    _name_pair("wave_ink_corner_nw", 988 + 0),
    _name_pair("wave_ink_corner_se", 989 + 0),
    _name_pair("wave_ink_corner_sw", 990 + 0),
    _name_pair("wave_ink_e", 993 + 0),
    _name_pair("wave_ink_full", 995 + 0),
    _name_pair("wave_ink_n", 991 + 0),
    _name_pair("wave_ink_s", 992 + 0),
    _name_pair("wave_ink_w", 994 + 0),
    _name_pair("wave_n", 983 + 0),
    _name_pair("wave_s", 984 + 0),
    _name_pair("wave_w", 986 + 0),
};

bool tile_floor_index(const char *str, tileidx_t *idx)
{
    ASSERT(str);
    if (!str)
        return false;

    string lc = str;
    for (unsigned int i = 0; i < lc.size(); i++)
        lc[i] = toalower(lc[i]);

    int num_pairs = sizeof(floor_name_pairs) / sizeof(floor_name_pairs[0]);
    bool result = binary_search<const char *, tileidx_t>(
       lc.c_str(), &floor_name_pairs[0], num_pairs, &strcmp, idx);
    return result;
}

bool tile_floor_equal(tileidx_t tile, tileidx_t idx)
{
    ASSERT_RANGE(tile, 0, TILE_FLOOR_MAX);
    return idx >= tile && idx < tile + tile_floor_count(tile);
}


typedef pair<tile_variation, tileidx_t> _colour_pair;

static _colour_pair floor_colour_pairs[] =
{
    _colour_pair(tile_variation(0, 0), 0),
    _colour_pair(tile_variation(18 + 0, 1), 36 + 0),
    _colour_pair(tile_variation(18 + 0, 2), 45 + 0),
    _colour_pair(tile_variation(18 + 0, 3), 54 + 0),
    _colour_pair(tile_variation(18 + 0, 4), 63 + 0),
    _colour_pair(tile_variation(18 + 0, 5), 72 + 0),
    _colour_pair(tile_variation(18 + 0, 6), 27 + 0),
    _colour_pair(tile_variation(18 + 0, 8), 81 + 0),
    _colour_pair(tile_variation(18 + 0, 9), 90 + 0),
    _colour_pair(tile_variation(18 + 0, 10), 99 + 0),
    _colour_pair(tile_variation(18 + 0, 11), 108 + 0),
    _colour_pair(tile_variation(18 + 0, 12), 117 + 0),
    _colour_pair(tile_variation(18 + 0, 13), 126 + 0),
    _colour_pair(tile_variation(18 + 0, 14), 135 + 0),
    _colour_pair(tile_variation(18 + 0, 15), 144 + 0),
    _colour_pair(tile_variation(288 + 0, 1), 292 + 0),
    _colour_pair(tile_variation(288 + 0, 2), 296 + 0),
    _colour_pair(tile_variation(288 + 0, 3), 300 + 0),
    _colour_pair(tile_variation(288 + 0, 5), 304 + 0),
    _colour_pair(tile_variation(288 + 0, 6), 308 + 0),
    _colour_pair(tile_variation(288 + 0, 7), 312 + 0),
    _colour_pair(tile_variation(288 + 0, 8), 316 + 0),
    _colour_pair(tile_variation(288 + 0, 9), 320 + 0),
    _colour_pair(tile_variation(288 + 0, 10), 324 + 0),
    _colour_pair(tile_variation(288 + 0, 11), 328 + 0),
    _colour_pair(tile_variation(288 + 0, 12), 332 + 0),
    _colour_pair(tile_variation(288 + 0, 13), 336 + 0),
    _colour_pair(tile_variation(288 + 0, 14), 340 + 0),
    _colour_pair(tile_variation(288 + 0, 15), 344 + 0),
    _colour_pair(tile_variation(421 + 0, 1), 428 + 0),
    _colour_pair(tile_variation(421 + 0, 2), 435 + 0),
    _colour_pair(tile_variation(421 + 0, 3), 442 + 0),
    _colour_pair(tile_variation(421 + 0, 5), 449 + 0),
    _colour_pair(tile_variation(421 + 0, 6), 456 + 0),
    _colour_pair(tile_variation(421 + 0, 7), 463 + 0),
    _colour_pair(tile_variation(421 + 0, 8), 470 + 0),
    _colour_pair(tile_variation(421 + 0, 9), 477 + 0),
    _colour_pair(tile_variation(421 + 0, 10), 484 + 0),
    _colour_pair(tile_variation(421 + 0, 11), 491 + 0),
    _colour_pair(tile_variation(421 + 0, 12), 498 + 0),
    _colour_pair(tile_variation(421 + 0, 13), 505 + 0),
    _colour_pair(tile_variation(421 + 0, 14), 512 + 0),
    _colour_pair(tile_variation(421 + 0, 15), 519 + 0),
    _colour_pair(tile_variation(669 + 0, 1), 678 + 0),
    _colour_pair(tile_variation(669 + 0, 2), 687 + 0),
    _colour_pair(tile_variation(669 + 0, 3), 696 + 0),
    _colour_pair(tile_variation(669 + 0, 5), 705 + 0),
    _colour_pair(tile_variation(669 + 0, 6), 714 + 0),
    _colour_pair(tile_variation(669 + 0, 7), 723 + 0),
    _colour_pair(tile_variation(669 + 0, 8), 732 + 0),
    _colour_pair(tile_variation(669 + 0, 9), 741 + 0),
    _colour_pair(tile_variation(669 + 0, 10), 750 + 0),
    _colour_pair(tile_variation(669 + 0, 11), 759 + 0),
    _colour_pair(tile_variation(669 + 0, 12), 768 + 0),
    _colour_pair(tile_variation(669 + 0, 13), 777 + 0),
    _colour_pair(tile_variation(669 + 0, 14), 786 + 0),
    _colour_pair(tile_variation(669 + 0, 15), 795 + 0),
};

tileidx_t tile_floor_coloured(tileidx_t idx, int col)
{
    int num_pairs = sizeof(floor_colour_pairs) / sizeof(floor_colour_pairs[0]);
    tile_variation key(idx, col);
    tileidx_t found;
    bool result = binary_search<tile_variation, tileidx_t>(
       key, &floor_colour_pairs[0], num_pairs,
       &tile_variation::cmp, &found);
    return (result ? found : idx);
}

